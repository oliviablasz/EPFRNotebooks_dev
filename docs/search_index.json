[["index.html", "EPFR Strategy Notebooks Introduction", " EPFR Strategy Notebooks Introduction EPFRs two core data sets capture the flows and allocations of mutual funds and ETFs. Together these data sets provide market insight and illustrate where money is moving across geographies, sectors, industries and securities. Described in this book are proof-of-concept strategies created by Quantitative Analysts at EPFR. Each of these chapters demonstrates the value and predictive power this data holds for different use cases. The backtesting methodology used across each of these strategies is relatively similar. They are all quintile-based, long/short, and we apply similar lookback periods for our backtests. We use a standard backtest period because we seek to avoid optimizing any one strategy. "],["macro-strategy-signals.html", "Macro Strategy Signals", " Macro Strategy Signals The two different types of signals discussed in the macro strategies section of this notebook are flow momentum and active/passive indicator. However these are not the only signals that can be created. For each of the strategies discussed in this notebook, we provide the time series files available for download. To access the files you can find them readily available in the users EPFR FTP connection under the strategies folder, or click here to email our team for assistance. Flow Momentum Using EPFRs daily, weekly, or monthly flows we can create momentum signals, which gives insight to where money is flowing in the market. By identifying where positive flows are moving and driving the market up and the opposite with negative flows, we can make informed decisions to go long or short by following these flow trends. Below is a list of EPFRs proof-of-concept strategies that are based on flow momentum and the data used to create the signal: Multi-Asset Strategy - (daily flows) FX Strategy - (daily flows, country allocations) Flow-Percentage Country Strategy - (daily flows, country allocations) Flow-Percentage Sector Strategy - (daily flows, sector allocations, country allocations) Flow-Percentage DM Rates Strategy - (daily flows, country allocations) Active/Passive Indicator Using EPFRs monthly allocations data we can create active/passive indicators, which gives insight to where managers are placing the money within their funds. By identifying which countries, sectors, industries, and securities the funds have overweight and underweight positions in, we are able to make informed decisions to follow the active positioning of the aggregate asset management community. Below is a list of EPFRs proof-of-concept strategies that are based on an active/passive indicator and the data used to create the signal: Active/Passive Country Strategy - (country allocations) Active/Passive Sector Strategy - (sector allocations) "],["epfr-stock-factors.html", "EPFR Stock Factors", " EPFR Stock Factors Quantitative analysts at EPFR have created 13 different proof-of-concept stock factors using EPFRs monthly holdings data and daily or monthly flows, which provide insight to various trends in the market. By identifying and following these trends, users can make better informed investment decisions. Below is a list of EPFRs 7 daily and 6 monthly proof-of-concept factors that use stock level data used to create a signal: Daily Factors: Flow Momentum FloMo Smart Money FloTrend FloDiff FloDiff2 ActWtTrend ActWtDiff ActWtDiff2 Monthly Factors: Manager momentum AllocMo AllocTrend AllocDiff Ownership Dispersion Herfindahl Fund Count Conviction AllocSkew "],["epfr.r-library.html", "EPFR.r Library", " EPFR.r Library The R-based EPFR Library, created by members of the EPFR Quant Team, has an extensive list of applicable functions for use on our data and will be used in this demonstration of our strategies. This library includes a variety of different functions that can help create signals, rank factors, evaluate performance of strategies, along with a list of other useful tools for handling EPFR data. To install the library EPFR.r, click here to download the zip file from github, or you can find the code to do this below. library(&quot;devtools&quot;) install_github(&quot;EPFR/EPFR-Quant-Library-R&quot;) library(&quot;EPFR.r&quot;) To learn more please refer to the library documentation for all of the descriptions and complete list of parameters for each function, which is easily accessible via the help function in R (tip: ?fcn_name()). "],["set-up.html", "Set-up", " Set-up To use various functions in library('EPFR.r') it is recommended that the user sets up a folder called EPFR in your computers C drive (i.e. C://EPFR). This is the default directory that is used throughout the library to find any files used to perform backtests. Inside of this EPFR directory we would suggest following the below folder structure: Add a daily folder to store EPFR daily csv files. Example: MultiAsset-Rgn-daily.csv, FloPctCtry-daily.csv, FloPctSector-US-daily.csv, FX-daily.csv, etc. Add a monthly folder to store EPFR monthly csv files. Example: ActPasCtry-monthly.csv, etc. Add a returns folder to store any return files used. Example: PsuedoReturns-MultiAsset-FI-daily.csv, ExchRates-daily.csv, etc. Add a parameters folder to store any files that library('EPFR.r') has dependencies on. The user should add the following files, which they can download via their EPFR FTP connection (located under the Classifications folder): classif-Ctry.txt MsciCtry2016.txt MsciCtryClassification.txt "],["strategy-functions.html", "Strategy Functions", " Strategy Functions Total Return Index EPFRs function ret.to.idx() uses other functions within library('EPFR.r') to compute a total-return index series, from percentage returns. To calculate the total return index we sum 1 plus todays percentage return multiplied by the previous days total-return index. ret.to.idx &lt;- function(x) { # ----------------------------------------------------------------- # Name : ret.to.idx # Args : x = a file of total returns indexed so that time runs forward # Output : computes a total-return index # ----------------------------------------------------------------- if (is.null(dim(x))) { z &lt;- x w &lt;- !is.na(z) n &lt;- find.data(w, T) m &lt;- find.data(w, F) if (n &gt; 1) n &lt;- n - 1 z[n] &lt;- 100 while (n &lt; m) { n &lt;- n + 1 z[n] &lt;- (1 + zav(z[n])/100) * z[n - 1] } } else { z &lt;- fcn.mat.vec(ret.to.idx, x,, T) } # # RETURN RESULT z } Compunding Flows EPFRs function compound.flows() uses other functions within library('EPFR.r') to compute a rolling cumulative sum of flows over a trailing lookback period (typically we use 20 days). compound.flows &lt;- function(x, y, n = F) { # ----------------------------------------------------------------- # Args : x = a matrix/data-frame of percentage flows # : y = number of trailing rows to compound/sum # : n = if T, flows get summed. Otherwise they get compounded. # Output : compounded flows over &lt;n&gt; trailing periods indexed by last day in the flow window # ----------------------------------------------------------------- # # FIND NA&#39;s : # creates new df with value of 1 for all non-NA flows, else NA h &lt;- nonneg(mat.to.obs(x)) # # PRELIMINARIES : # convert all NA values to 0 in order to do computations # convert to log form z &lt;- zav(x) if (!n) z &lt;- log(1 + z/100) # # ROLLING WINDOWS # calculate rolling sum # reverse log form z &lt;- mat.rollsum(z, y) if (!n) z &lt;- 100 * exp(z) - 100 # # ENSURE FINAL DATE IN EACH ROLLING WINDOW IS NON-NA # multiply compounded flow matrix by h (1/NA df) z &lt;- z * h # # RETURN RESULT z } Please refer to the library documentation for more details. Model EPFRs function bbk() creates a standardized backtest model based on our inputs (e.g. ranking factors into 5 equal baskets based on compounded flows). bbk &lt;- function(x, y, floW = 1, retW = 5, nBin = 5, doW = NULL, sum.flows = F, lag = 0, delay = 2, idx = NULL, prd.size = 1, sprds = F) { # ----------------------------------------------------------------- # Args : x = predictor indexed by yyyymmdd or yyyymm (compounded percentage flow) # : y = total return index indexed by the same date format as &lt;x&gt; # : floW = number of &lt;prd.size&gt;&#39;s over which the predictor should be compounded/summed # : retW = return window in days or months depending on whether &lt;x&gt; is YYYYMMDD or YYYYMM # : nBin = number of bins to divide the variable into # : doW = day of the week you will trade on (5 = Fri) # : sum.flows = T/F depending on whether &lt;x&gt; should be summed or compounded # : lag = predictor lag in days or months depending on whether &lt;x&gt; is YYYYMMDD or YYYYMM # : delay = delay in knowing data in days or months depending on whether &lt;x&gt; is YYYYMMDD or YYYYMM # : idx = the index within which you are trading # : prd.size = size of each period in days or months depending on whether &lt;x&gt; is YYYYMMDD or YYYYMM # : sprds = T/F depending on whether spread changes, rather than returns, are needed # Output : standard model output # ----------------------------------------------------------------- # # GET DATA x &lt;- bbk.data(x, y, floW, sum.flows, lag, delay, doW, retW, idx, prd.size, sprds) # # BIN RETURNS z &lt;- lapply(bbk.bin.xRet(x$x, x$fwdRet, nBin, T, T), mat.reverse) # # SUMMARY z &lt;- c(z, bbk.summ(z$rets, z$bins, retW, ifelse(is.null(doW), 1, 5))) # # RETURN RESULT z } Please refer to the library documentation for more details. Example Step 0: Download and read the files Users can download the corresponding percentage flow and percentage returns files available in the users FTP, under the folders Strategies/daily and Returns/daily. For this example, we download the full file paths /Strategies/daily/FloPctSector-US-daily.csv and /Returns/PsuedoReturns-Sector-US-daily.csv, and save to our local folder EPFR. For convenience, we can save the local paths to these files as flow.file and ret.file, then we can read the files. flow.file &lt;- &quot;C:\\\\EPFR\\\\FloPctSector-US-daily.csv&quot; ret.file &lt;- &quot;C:\\\\EPFR\\\\PsuedoReturns-Sector-US-daily.csv&quot; x &lt;- mat.read(flow.file) # Flow file y &lt;- mat.read(ret.file) # Return file Step 1: Ensure that x and y have the same column names and order x &lt;- as.matrix(x[, dimnames(y)[[2]]]) # LINE UP INDICATORS WITH RETURNS Step 2: Compound (or Sum Flows) over lookback period (\\(y\\)) EPFRs function compound.flows() uses other functions within library('EPFR.r') to either compound, or compute a rolling cumulative sum of flows, over a trailing lookback period (typically we use y = 20 days). x &lt;- compound.flows(x, y = 20) Step 3: Convert the percentage returns to total return index EPFRs function ret.to.idx() will convert our percentage returns data \\(y\\) to total index returns indexed, so that time moves forward. We also use the functions map.rname() to ensure the row names of the matrices line up with our flow file and ret.idx.gaps.fix() to replace any NA values. y[is.na(y)] &lt;- 0 y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) Step 4: Define variables hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS OR MONTHS) - holding periods nBin &lt;- 5 # Number of bins (to sort) doW &lt;- 5 # Day of the week to trade on delay &lt;- 2 # Delay in getting the data (able to trade on data @ T+2) idx &lt;- NULL # Optional: Universe that is being used for signal (e.g. ACWI/EM/EAFE/G10) Step 5: Create standardized backtest model z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx) Step 6: Evaluate output \\(Z\\) has 4 different outputs that you can view. Within the final rets output, the overall portfolio will go long the top quintile and short the bottom. However, the returns of each individual quintile are also presented. z[[&quot;raw&quot;]] # Flow percentage compounded over trailing 20 days z[[&quot;raw.fwd.rets&quot;]] # One-week ahead return (Friday to Friday) z[[&quot;bins&quot;]] # Twenty-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;rets&quot;]] # Quintile Returns over the equal-weight universe, *column TxB tells us top - bottom = Q1 - Q5 = overall portfolio returns Step 7: Re-balance as needed Strategies need to be rebalanced and the below code outputs summary statistics across 6 different rebalancing options found in \\(hz\\). Depending on how the signal we are backtesting is indexed, holding periods can be specified in a daily or monthly format. For this example, we have a daily signal and \\(hz\\) contains options for a weekly (5 days), fortnightly (10 days), monthly (20 days), bi-monthly (45 days), quarterly (65 days), and semi-annual (130 days) rebalanced portfolio. fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Step 8: Find the mean one-week returns per calendar year bbk(x, y, 1, hz[1], 5, doW, T, 0, delay)$annSumm "],["epfr-data-filters.html", "EPFR Data &amp; Filters", " EPFR Data &amp; Filters EPFR has an extensive list of over two dozen filters that can be applied to our data sets, therefore the signals we can get can be fine-tuned. For example EPFR data can be filtered by: Asset class focus: ability to select equity mandate, bond mandate, multi-asset mandate, balanced mandate, money market funds, and alternative funds. Fund type: ability to separate by active versus passive, and ETF versus mutual funds. Investor type: ability to separate retail funds (&lt;100,000 USD investment or Mutual Fund) from institutional funds (&gt;100,000 USD investment or ETF). Fund domicile or geographic focus: domicile refers to where the fund is based and where it is registered. Geographic focus refers to the assets that are bought within the fund. Currency of flows: allows you to filter by the currency-type share class the fund denominates in, regardless of the domicile or location of the investment. Theme: allows you to segment funds that invest in specific themes. These can include different commodities, bear/leverage, SRI/ESG, Sharia, Frontier, MLP, Dividend, Insurance, CIT, Crypto, or Hedge Funds. Duration: refers to specific mandated maturities of bond funds. Style: on the equities side, it ranges from the traditional blend, growth, and value mandate style to splitting out market caps. Sector: allows you to filter for sector specific funds (ex: energy, real estate, health care, technology). More definitions can be found in the FAQ section on EPFRs UI "],["video-explanations.html", "Video Explanations", " Video Explanations Asset class focus Fund type Investor type Currency of flows Fund domicile or Geographic focus Theme Sector Style Duration Individual managers "],["multi-asset-strategy.html", "1 Multi-Asset Strategy", " 1 Multi-Asset Strategy This is a Multi-Asset Strategy, where we are essentially rotating between asset classes within equity and fixed-income universes. This approach uses fixed-income funds and active equity funds to calculate the percentage flow into asset classes. "],["data.html", "1.1 Data", " 1.1 Data The Multi-Asset Strategy developed by EPFR is based on the percentage flow into asset classes. In this section, the reader will gain an understanding of the aggregations which can be used to create a signal as well as the methodology behind daily percentage flow calculations. 1.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. For this strategy we can include equity, fixed-income, or both types of funds. Although, we will limit ourselves to actively managed funds when compiling the raw equity data. Equity and fixed-income (i.e. Multi-Asset) funds, which report their daily flows, are only a subset of those that report their fund flows to EPFR. The figure below shows EPFRs daily coverage for each of these universes over time compared to our total monthly and daily coverage. AUM ($BB) Funds reporting Daily-flow reporters used in: Monthly Flows Daily Flows Multi Asset 7-Region Equity Fixed Income 2007 9,467 4,332 2,497 1,196 1,301 2008 10,071 5,361 3,399 1,190 2,209 2009 10,488 6,142 4,317 927 3,389 2010 12,538 7,114 4,570 1,093 3,477 2011 15,269 8,931 5,319 1,453 3,866 2012 16,977 9,645 5,725 1,605 4,120 2013 20,095 12,142 7,030 2,134 4,896 2014 23,740 14,584 8,189 2,549 5,640 2015 25,321 15,767 8,496 2,715 5,781 2016 26,284 16,467 8,683 2,606 6,078 2017 30,076 19,240 9,598 2,917 6,681 2018 33,397 21,523 10,283 3,224 7,059 2019 35,570 22,777 10,953 3,224 7,729 2020 39,799 26,843 13,339 3,387 9,952 2021 50,476 33,766 15,165 4,507 10,658 2022 45,930 31,410 14,372 3,884 10,488 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only active, passive, ETFs or mutual funds, or only institutional or retail share class flows and assets. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level flow files or by reaching out to EPFRs Quant Team for customized aggregations. 1.1.2 Daily Percentage Flow To begin calculating the daily percentage flow, we start with our subset of Multi-Asset funds. To calculate the total dollar flow into an asset class, we will sum the flows into the funds investing in that asset class. \\[\\text{Total Flow}_{a,t} = \\sum^{N}_{i=m} \\text{Flow}_{i,a,t}\\] Where: \\(\\text{Total Flow}\\) = the total dollar flow into an asset class \\(a\\), across all funds in our universe \\(i\\), for day \\(t\\) We will want to normalize this figure. So, we repeat the process across the same funds Assets held under Management (AuM), to get the total AuM held in an asset class. \\[\\text{Total AuM}_{a,t} = \\sum^{N}_{i=m} \\text{AuM}_{i,a,t}\\] Where: \\(\\text{Total AuM}\\) = the total assets held in an asset class \\(a\\), across all funds in our universe \\(i\\), for day \\(t\\) Finally, to get the daily percentage flow for an asset class, we divide the total dollar flow by the total AuM held in an asset class. \\[\\text{Percentage Flow}_{a,t} = 100 \\times \\frac{\\text{Total Flow}_{a,t}}{{\\text{Total AuM}_{a,t}}}\\] Where: \\(\\text{Percentage Flow}\\) = the scaled flow as a percentage into an asset class \\(a\\), across all funds in our universe \\(i\\), for day \\(t\\) We repeat this across all different asset classes for the entire history. 1.1.3 Aggregate Flow File Users may create flow percentages for their desired equity and/or fixed-income asset class aggregations and granularity using the methodology described in the previous section. Users also have the option to use the Multi-Asset Strategy files EPFR provides, which are updated daily at 5:00 PM EST with a T+1 day lag, and are available in the users EPFR FTP connection under the Strategies folder. There are two different types of Multi-Asset Strategy files for fixed-income and (active) equity funds, which both contain aggregate percentage flow data. Below is the list of asset classes in each file: Asset Classes 7 Global Equity Regions: Asia ex Japan Europe ex UK Japan Latin America Pacific ex Japan United Kingdom United States 10 Fixed Income: Global Emerging Markets Western Europe Bond High Yield Bond Floating Rate Funds USA Treasuries - Intermediate USA Treasuries - Long USA Treasuries - Short Cash USA Munis Global Fixed Income For this demonstration, we will be using the files MultiAsset-Rgn-daily.csv and MultiAsset-FI-daily.csv, which can be downloaded from the users FTP under the folder Strategies/daily and can be stored in the users local folder EPFR/daily. Below shows a snippet of what these files contain: Strategies/daily/MultiAsset-Rgn-daily.csv AsiaXJP EurXGB Japan LatAm PacXJP UK USA 20221201 0.007832 -0.049717 0.025896 -0.119699 0.047104 0.046167 -0.002579 20221202 -0.005935 0.045037 0.044813 -0.120665 -0.089292 -0.005365 -0.011253 20221205 0.103487 -0.028151 -0.130054 0.032016 -0.036000 -0.139015 -0.090282 20221206 -0.033235 -0.034462 -0.062251 0.008487 -0.014146 -0.005865 -0.099294 20221207 0.139546 0.033230 -0.064353 0.092872 -0.010595 -0.040282 -0.084254 20221208 0.061229 -0.058623 -0.011848 0.052552 -0.050941 -0.052541 -0.111574 Strategies/daily/MultiAsset-FI-daily.csv GLOBEM WESEUR HYIELD FLOATS USTRIN USTRLT USTRST CASH USMUNI GLOFIX 20221201 0.051787 0.033868 0.289366 0.184143 0.096795 2.799822 -0.680302 0.366766 0.063576 -0.113089 20221202 0.070311 -0.003194 0.033532 -0.142670 0.126346 -0.007633 -0.033858 0.251873 0.016175 -0.010894 20221205 0.197142 0.010749 -0.230443 -0.038015 -0.606976 -0.028715 -0.273733 0.203955 0.011237 0.042224 20221206 0.058314 0.063199 -0.167975 -0.174142 0.240116 -0.036163 -0.385658 0.159930 0.045748 0.012920 20221207 0.004829 0.015731 -0.046363 -0.253774 -0.014336 0.044745 -0.077747 -0.080626 0.009204 0.013182 20221208 0.079906 -0.062840 -0.144903 -0.335260 0.083566 0.163354 0.306039 0.445716 -0.003462 0.068364 For convenience, save the paths to the flow files you choose to use as flow.file.rgn and flow.file.FI respectively. Example shown below: flow.file.rgn &lt;- &quot;C:\\\\EPFR\\\\daily\\\\MultiAsset-Rgn-daily.csv&quot; flow.file.FI &lt;- &quot;C:\\\\EPFR\\\\daily\\\\MultiAsset-FI-daily.csv&quot; 1.1.4 Return File The return file for this strategy should contain daily fixed-income and passive-equity returns for the respective asset classes contained in the flow file, over the period of time the user wants to backtest. The user can choose to either use return data found with their own resources, or the files EPFR provides specifically for the Multi-Asset Strategy, which are available in the users EPFR FTP connection under the Returns folder (more information available in Returns Information). The return files that EPFR provides contain Fund Return data and can be used as a proxy to equity and fixed-income market returns. The user can recreate these files using EPFRs daily flow data with the following equation: \\[\\text{Fund Return}_{a,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,a,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,a,t}}\\] Where: \\(\\text{Fund Return}\\) = the percentage return of an asset class \\(a\\), across all funds in our universe \\(i\\), for day \\(t\\) For this demonstration, we will be using the files PsuedoReturns-MultiAsset-Rgn-daily.csv and PsuedoReturns-MultiAsset-FI-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what these files contain: Returns/daily/PsuedoReturns-MultiAsset-Rgn-daily.csv AsiaXJP EurXGB Japan LatAm PacXJP UK USA 20221201 0.715411 0.500223 0.384052 -0.568963 0.727795 0.193082 -0.039694 20221202 -0.313732 0.127613 -0.799961 -0.411561 0.077575 -0.037108 -0.045309 20221205 0.383543 -0.330591 -0.879353 -1.300552 -0.284246 0.086392 -1.455498 20221206 -0.858824 -0.576183 0.021875 -0.732394 0.001009 -0.527493 -1.862187 20221207 -1.122508 -0.524565 -0.248970 -0.574701 -0.828990 -0.463849 -0.192359 20221208 1.007893 -0.082585 -0.365683 -0.844728 0.028126 -0.268758 0.673149 Returns/daily/PsuedoReturns-MultiAsset-FI-daily.csv GLOBEM WESEUR HYIELD FLOATS USTRIN USTRLT USTRST CASH USMUNI GLOFIX 20221201 0.446122 0.224148 0.593589 0.036348 0.624382 2.254448 0.028171 0.000667 0.415195 0.356319 20221202 0.307907 0.171585 0.051091 -0.002056 0.134954 0.123340 -0.000624 0.001003 0.052663 0.218442 20221205 0.126604 0.035921 -0.153365 -0.027640 -0.356850 -0.209727 -0.063772 0.001550 0.140540 -0.032771 20221206 -0.280337 0.160147 -0.255263 0.003406 0.144371 0.780719 0.017401 0.000984 0.031446 0.062543 20221207 0.140055 0.058259 -0.018378 -0.065139 0.634225 1.535799 0.098879 0.000776 0.185798 0.184534 20221208 0.265156 -0.024768 0.142264 -0.005329 -0.318677 -0.241050 -0.032810 0.000782 0.036168 0.062115 For convenience, save the paths to the return files you choose to use as ret.file.rgn and ret.file.FI respectively. Example shown below: ret.file.rgn &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-MultiAsset-Rgn-daily.csv&quot; ret.file.FI &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-MultiAsset-FI-daily.csv&quot; "],["strategy-implementation.html", "1.2 Strategy Implementation", " 1.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the flow files to our R studio workspace. x.rgn &lt;- mat.read(flow.file.rgn) # GET RGN FLOW PERCENTAGE C:\\\\EPFR\\\\daily\\\\MultiAsset-Rgn-daily.csv x.FI &lt;- mat.read(flow.file.FI) # GET FI FLOW PERCENTAGE C:\\\\EPFR\\\\daily\\\\MultiAsset-FI-daily.csv The next step is to ensure both of our flow files have the same rows so that we can combine the two files, like we do below. x.rgn &lt;- x.rgn[is.element(dimnames(x.rgn)[[1]], dimnames(x.FI)[[1]]), ] # ENSURES RGN MATCHES FI ROWS x.FI &lt;- x.FI[is.element(dimnames(x.FI)[[1]], dimnames(x.rgn)[[1]]), ] # ENSURES FI MATCHES RGN ROWS x &lt;- cbind(x.rgn, x.FI) # COMBINES RGN AND FI DATA One of the first options we have is choosing the universe we want to backtest. EPFR has tested this signal within two different universes of asset classes: Rgn (7 Region Equity) and FI (Fixed Income). For this example, we choose Multi, which includes both of our equity and fixed-income asset classes, but users can also choose to backtest within either the Rgn or FI universes separately. idx &lt;- &quot;Multi&quot; # Multi/Rgn/FI 1.2.1 Compounding Flows Next, we set up a variable for our lookback period, which can also be called a flow window. This variable will be the window of time we use to create a trailing compounded daily percentage flow. The lookback period we choose for our demonstrations is 20 days. lookback &lt;- 20 # FLOW WINDOW (IN WEEKDAYS) - 20 day look back period Using a function from the library('EPFR.r'), compound.flows() compounds our daily percentage flow over the trailing lookback period for each asset class. x &lt;- compound.flows(x, lookback, F) # COMPOUND FLOWS AsiaXJP EurXGB Japan LatAm PacXJP UK USA GLOBEM WESEUR HYIELD FLOATS USTRIN USTRLT USTRST CASH USMUNI GLOFIX 20221201 -0.5935744 -0.9011096 0.1759815 -1.231081 -0.3122597 -0.8392634 -0.4846786 0.6630384 0.5921352 1.9514429 -2.125939 0.8615195 7.368753 -0.5797696 1.324865 0.1061790 0.2467439 20221202 -0.4957430 -0.6686647 0.2507892 -1.508537 -0.3909206 -0.7661013 -0.5061060 0.7765973 0.5282304 1.9381506 -2.151642 0.9314150 7.247511 -0.6783618 1.771157 0.1854309 0.2729250 20221205 -0.4947291 -0.7995004 0.0388963 -1.531783 -0.4224801 -0.8483539 -0.5699878 0.9884008 0.4988437 1.6447813 -2.064563 0.2088554 7.170713 -1.3358431 1.654928 0.2551084 0.3154037 20221206 -0.4729045 -0.6938171 -0.0446434 -1.628549 -0.3301458 -0.8645179 -0.6412650 1.0813465 0.5051112 1.4909559 -2.218451 0.4746187 6.925902 -2.1067769 1.780230 0.3172435 0.3053755 20221207 -0.2520256 -0.5759144 -0.1187730 -1.695810 -0.3475549 -0.8860501 -0.6878389 1.0946509 0.5293832 1.3865604 -2.436764 0.3590598 6.852528 -2.4679185 1.562598 0.3119034 0.3425063 20221208 -0.0925901 -0.6546987 0.0569879 -1.612896 -0.4813274 -0.8700669 -0.7834505 1.2062479 0.4497268 0.4233311 -2.837551 0.9271004 6.053509 -1.3176497 2.342189 0.2374214 0.3654252 1.2.2 Total Return Index We will then import our two total return files and modify them to become one data frame of total index returns indexed so that time moves forward. To do this, we will use the function ret.to.idx() from library('EPFR.r'). We will also use the functions map.rname() to ensure the row names of the matrices line up with our flow file, and ret.idx.gaps.fix() to replace any NA values. Please refer to the library documentation for the complete list of parameters for these functions (tip: ?ret.to.idx(),?ret.idx.gaps.fix() ). #RGN RETURNS y &lt;- mat.read(ret.file.rgn) # GET RGN PERCENTAGE RETURNS C:\\\\EPFR\\\\returns\\\\PsuedoReturns-MultiAsset-Rgn-daily.csv y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) #F.I. RETURNS z &lt;- mat.read(ret.file.FI) # GET FI PERCENTAGE RETURNS C:\\\\EPFR\\\\returns\\\\PsuedoReturns-MultiAsset-FI-daily.csv z &lt;- ret.to.idx(map.rname(z, dimnames(y)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX #COMBINE RETURN FILES y &lt;- data.frame(y, z)[, dimnames(x)[[2]]] # FINAL TOTAL-RETURN INDEX TABLE y &lt;- y[max(simplify2array(lapply(y, function(x) {find.data(!is.na(x), T)}))):min(simplify2array(lapply(y, function(x) {find.data(!is.na(x), F)}))), ] # ENSURE ALL PIECES HAVE RETURN OVER THE SAME HORIZON 1.2.3 Subset files Then, to subset the flow file \\(x\\) and return file \\(y\\) to the selected universe \\(idx\\) of asset classes, the following code is used. During this process, we also ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. if (idx == &quot;Rgn&quot;) { x &lt;- x[, 1:7] y &lt;- y[, 1:7] } else if (idx == &quot;FI&quot;) { x &lt;- x[, 8:dim(x)[2]] y &lt;- y[, 8:dim(y)[2]] } * Note: subsetting can also be done when creating the flow and return files 1.2.4 Ranking Asset Classes Next, we sort each of the asset classes in our universe into five equal bins based on their compounded percentage flow values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our daily percentage flow data compounded over a desired period and the total return index data. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+1 day lag and is released around 5:00 pm EST, we account for a T+2 day delay in our model. Users interested in more timely signals can also use the T+2 open prices for backtesting purposes. Alternatively, EPFRs Premium Daily offering collects an earlier release of end-of-day data which includes a significant subset of its original fund-level flow information. delay &lt;- 2 # DELAY IN KNOWING DATA (IN WEEKDAYS) - data takes time to have It is also important to note that this model will need to be re-balanced weekly. The day of the week the rebalancing occurs is at the users discretion. For this example, we will set the day of the week to trade as Friday. doW &lt;- 5 # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input the return horizons that they are interested in here. For this example, we define a return horizon for weekly, fortnightly, monthly, bi-monthly, quarterly, and semi-annual rebalancing. hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS) - holding periods Now that we have defined all of our inputs, to rank the asset classes into quintiles by their 20-day percentage flow, we call the function bbk() for a one-week holding period. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay) 1.2.5 Model 20-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] AsiaXJP EurXGB Japan LatAm PacXJP UK USA GLOBEM WESEUR HYIELD FLOATS USTRIN USTRLT USTRST CASH USMUNI GLOFIX 20221230 2 4 3 4 3 4 5 1 2 5 5 2 1 1 3 4 2 20221223 2 4 3 5 3 4 4 1 1 5 5 2 1 2 3 4 2 20221216 2 4 3 5 3 4 4 1 2 2 5 4 1 5 1 3 2 20221209 3 4 3 5 4 4 4 2 2 1 5 2 1 5 1 3 2 20221202 4 4 3 5 4 5 4 2 2 1 5 1 1 2 2 3 3 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 20221230 0.1281527 0.0754571 -1.4629180 1.2088600 -0.3776576 0.5058103 1.7369770 20221223 -0.4086635 0.2329289 0.2585288 0.3556384 -0.6346217 0.2259583 -0.5369834 20221216 -1.0962074 -0.4775815 -1.2348837 0.3551931 2.4942756 -3.5904830 -0.1111863 20221209 1.0920910 0.7708809 0.0294642 -1.0666550 -0.7271897 1.8192807 -0.8059708 20221202 0.4451042 0.6385878 0.5724600 -0.5517372 -1.1333650 1.5784691 -0.5930231 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 1.2.6 Performance Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Weekly AnnMn 1.5 -1.4 0.9 2.2 -3.5 5.0 3.1 AnnSd 7.9 5.3 6.1 6.1 6.8 12.0 8.6 Sharpe 18.7 -26.4 14.9 36.1 -51.3 41.5 35.9 HitRate -0.2 -2.9 2.9 3.0 -3.0 1.0 6.7 Beta -0.6 -0.1 0.2 0.3 0.1 -0.7 1.0 Alpha 3.3 -1.1 0.3 1.3 -3.8 7.1 0.0 DrawDn -18.7 -35.8 -26.7 -18.9 -55.5 -28.1 -35.6 DDnBeg 20140124 20080104 20100226 20180727 20070525 20140103 20071026 DDnN 312 600 242 91 791 315 71 AnnTo 1185 1821 2567 2008 1395 2580 0 Fortnightly AnnMn 0.8 -0.5 1.2 1.7 -3.7 4.5 3.0 AnnSd 8.0 5.3 5.5 6.5 6.3 11.8 8.8 Sharpe 10.4 -9.8 22.5 26.5 -58.2 38.4 34.5 HitRate -1.1 -1.0 3.4 2.3 -5.4 2.1 8.8 Beta -0.6 -0.1 0.1 0.4 0.1 -0.7 1.0 Alpha 2.6 -0.3 0.9 0.5 -3.9 6.5 0.0 DrawDn -30.2 -26.1 -17.8 -17.7 -60.1 -32.8 -35.2 DDnBeg 20145512 20075666 20150672 20130374 20070604 20130520 20071064 DDnN 158 305 100 44 394 148 32 AnnTo 911 1260 1632 1322 1031 1942 0 Monthly AnnMn 0.6 -0.4 1.3 1.1 -2.9 3.5 3.1 AnnSd 8.2 5.0 5.4 6.4 6.4 12.2 9.2 Sharpe 6.9 -7.7 25.6 17.6 -46.2 29.1 33.4 HitRate -2.0 -2.0 2.8 3.7 -7.1 2.1 10.5 Beta -0.6 -0.1 0.1 0.4 0.1 -0.7 1.0 Alpha 2.4 0.0 0.9 0.0 -3.3 5.8 0.0 DrawDn -30.4 -22.6 -16.4 -21.5 -50.7 -29.7 -33.4 DDnBeg 20110790 20115758 20093091 20135358 20070716 20175692 20071040 DDnN 115 78 43 25 187 44 17 AnnTo 676 794 935 795 745 1420 0 Bi-Monthly AnnMn 0.3 -0.5 0.7 1.2 -1.9 2.3 3.0 AnnSd 7.8 4.9 5.5 6.0 6.4 11.7 9.4 Sharpe 3.7 -11.8 11.3 19.9 -30.6 18.9 31.7 HitRate -6.1 -3.9 2.0 3.8 -7.3 2.0 12.9 Beta -0.5 -0.1 0.2 0.3 0.0 -0.6 1.0 Alpha 1.9 -0.2 0.1 0.3 -2.1 4.0 0.0 DrawDn -33.0 -24.6 -19.1 -19.2 -43.3 -35.9 -30.3 DDnBeg 20106159 20098564 20092837 20091709 20084162 20132922 20072094 DDnN 66 49 24 18 69 41 7 AnnTo 336 371 436 380 380 716 0 Quarterly AnnMn 0.3 -0.8 0.6 1.2 -1.5 1.8 3.0 AnnSd 8.0 4.8 5.6 5.6 6.2 11.7 9.4 Sharpe 4.5 -16.2 11.2 21.8 -25.1 14.9 32.0 HitRate -5.3 -3.7 1.0 5.6 -6.5 0.8 15.1 Beta -0.5 -0.1 0.3 0.3 0.0 -0.5 1.0 Alpha 1.9 -0.5 -0.2 0.3 -1.4 3.2 0.0 DrawDn -34.6 -26.3 -18.7 -17.0 -36.8 -37.3 -28.1 DDnBeg 20114462 20095990 20086889 20101398 20087622 20134500 20072539 DDnN 40 40 20 11 44 30 4 AnnTo 246 267 301 265 271 518 0 Semi-Annual AnnMn -0.1 -1.3 0.8 1.5 -1.0 0.9 2.9 AnnSd 7.6 5.0 5.7 5.7 6.4 11.1 9.9 Sharpe -1.3 -26.0 13.0 25.4 -16.9 8.0 29.5 HitRate -2.6 -10.8 4.8 7.3 -7.1 -1.6 16.8 Beta -0.4 -0.1 0.3 0.3 -0.2 -0.2 1.0 Alpha 1.0 -1.0 0.0 0.7 -0.6 1.5 0.0 DrawDn -31.4 -31.8 -17.0 -15.8 -31.6 -41.0 -24.8 DDnBeg 20110205 20099885 20100391 20094253 20087249 20117096 20072774 DDnN 18 22 11 6 17 14 2 AnnTo 133 141 152 140 142 276 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2007 -3.6082047 9.7757241 0.9489985 0.8024830 -12.6187485 9.010544 5.096411 31 2008 29.3562711 -8.5932871 7.2019531 -4.5737342 -19.0021958 48.358467 -26.419153 52 2009 1.4847787 -1.9190692 13.6980105 4.0915206 -18.0793911 19.564170 24.424264 52 2010 1.2610208 -1.5646080 -3.4672020 4.1968338 -1.3034532 2.564474 8.836910 53 2011 -1.3135717 -1.2368679 -15.6334918 9.2636251 6.2447205 -7.558292 -1.662064 52 2012 -0.1860335 1.3568849 -0.0330965 1.6034806 -3.7280240 3.541991 9.968927 52 2013 6.0417546 0.1748375 -0.5863940 0.4887079 -6.3400877 12.381842 4.832942 52 2014 -9.5477567 -1.0865594 -3.5629921 5.7165743 6.9373955 -16.485152 3.534944 52 2015 -0.1183793 2.6349116 1.3390582 2.1771732 -7.6367921 7.518413 -2.713711 52 2016 -1.1926927 -6.4769847 6.1375141 1.0365156 2.3091374 -3.501830 6.614489 53 2017 -1.4889656 -4.8036337 -0.6455256 4.9465112 1.9439879 -3.432953 8.515356 52 2018 1.2066780 -9.6643318 9.5932077 -1.7854425 4.4664800 -3.259802 -5.493222 52 2019 -6.7750225 -3.0809016 5.8483689 2.9415722 1.1124262 -7.887449 11.670249 52 2020 20.0203192 5.3055202 -11.7713592 -7.3488543 -5.5245145 25.544834 4.149965 52 2021 -2.6403110 -0.0185477 0.0354360 7.6589912 -7.5823830 4.942072 3.956660 53 2022 -8.7384394 2.3320596 4.6409023 0.4485055 0.3901168 -9.128556 -9.538317 52 "],["fx-strategy.html", "2 FX Strategy", " 2 FX Strategy The FX Strategy is an equity fund-based currency rotation strategy, which ranks different foreign exchange markets of countries across a customized universe of both developed and emerging markets. This approach uses the stated allocations of equity funds with a cross-border focus and calculates the percentage flow into currencies. "],["data-1.html", "2.1 Data", " 2.1 Data The FX Strategy developed by EPFR is based on percentage flow into currencies. In this section, the reader will gain an understanding of the aggregations which can be used to create a signal as well as the methodology behind daily percentage flow calculations. 2.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy requires: Equity funds with a cross-border focus. These are essentially any fund that has a mandate spanning more than one country. The vast majority of these will be global and regional funds. Funds must report both daily flows and country allocations, since these values are needed to calculate the daily percentage flow. Cross-border equity funds, which report their country allocations and their daily fund flows, are a subset of those that only report their fund flows to EPFR. The figure below shows EPFRs coverage of this universe over time compared to our total monthly and daily coverages. AUM ($BB) of Equity funds All Funds Cross-border Monthly Flows Daily Flows Daily Flows Daily Flows &amp; Ctry Alloc 2007 6,241 2,717 1,173 446 2008 5,798 2,743 1,116 355 2009 4,794 2,273 887 303 2010 5,889 2,840 1,143 362 2011 7,595 3,932 1,601 449 2012 7,945 4,107 1,502 359 2013 10,109 5,525 1,964 606 2014 12,488 6,879 2,556 850 2015 13,561 7,575 2,755 927 2016 13,748 7,672 2,833 964 2017 16,148 9,385 3,656 1,326 2018 18,459 10,845 4,203 1,560 2019 19,075 11,096 4,063 1,718 2020 20,245 12,247 4,516 1,809 2021 28,451 17,390 6,494 2,611 2022 25,406 15,694 5,479 2,258 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only active, passive, ETFs or mutual funds, or only institutional or retail share class flows and assets. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level flow and allocation files or by reaching out to EPFRs Quant Team for customized aggregations. 2.1.2 Daily Percentage Flow To begin calculating the daily percentage flow, we start with our subset of cross-border equity funds. To calculate the dollar flow into a currency, we will first need to scale a funds flow by multiplying it against its stated allocation to countries using a currency of interest (e.g. USD, EUR), on that day. We apply the same procedure to all funds with fund flow and country allocation information and then sum the dollar flows into each currency across all funds, to get the total dollar flow into a currency. EPFR releases country allocations of all funds on the \\(23^{\\text{rd}}\\) of each month (or the next available business day) at a monthly frequency. Hence, our calculation assumes constant country weightings between two consecutive release dates within the month. \\[\\text{Total Flow}_{x,t} = \\sum^{N}_{i=m}{\\text{Flow}_{i,x,t} \\times \\text{Country Allocation}_{i,x}}\\] Where: \\(\\text{Total Flow}\\) = the total dollar flow into a currency \\(x\\), across all funds in our universe \\(i\\), for day \\(t\\) We will want to normalize this figure. So, we repeat the process across the same funds Assets held under Management (AuM), to get the total AuM held in a currency. \\[\\text{Total AuM}_{x,t} = \\sum^{N}_{i=m}{\\text{AuM}_{i,x,t} \\times \\text{Country Allocation}_{i,x}}\\] Where: \\(\\text{Total AuM}\\) = the total assets held in a currency \\(x\\), across all funds in our universe \\(i\\), for day \\(t\\) Finally, to find the daily percentage flow into a currency, we divide the total dollar flow by the total AuM held in a currency. \\[\\text{Percentage Flow}_{x,t} = 100 \\times \\frac{\\text{Total Flow}_{x,t}}{\\text{Total AuM}_{x,t}}\\] Where: \\(\\text{Percentage Flow}\\) = the scaled flow as a percentage into a currency \\(x\\), across all funds in our universe \\(i\\), for day \\(t\\) We repeat this across all different currencies for the entire history. 2.1.3 Aggregate Flow File Users may create flow percentages for their desired FX aggregations and granularity using the methodology described in the previous section. Users also have the option to use the FX Strategy files EPFR provides, which are updated daily and weekly at 5:00 PM EST with a T+1 day lag, and are available in the users EPFR FTP connection under the Strategies folder. The FX Strategy files contain aggregate percentage flow data for 37 currencies used in Emerging Market, ACWI, and G10 member countries. For this demonstration, we will be using the file FX-daily.csv, which can be downloaded from the users FTP under the folder Strategies/daily and can be stored in the users local folder EPFR/daily. Below shows a snippet of what this file contains: Strategies/daily/FX-daily.csv ARS AUD BRL CAD CHF CLP CNY CZK EGP GBP HUF IDR ILS INR JPY KRW MXN MYR NOK NZD PEN PHP PLN RUB SEK SGD THB TRY TWD ZAR USD EUR COP PKR MAD VND KWD 20221201 0.0251304 0.0082172 -0.1373853 -0.1685998 -0.0749154 -0.1496563 -0.0299551 -0.0142500 0.1940810 -0.1097745 -0.0322191 -0.0588564 -0.0059505 -0.0307035 -0.0999231 -0.1128431 -0.3022166 -0.0267607 -0.0579933 0.0145115 -0.2640881 0.0138949 -0.0459837 -0.4700456 -0.0866961 -0.0657525 -0.1268418 -0.0919432 -0.0436343 -0.0397615 -0.1795098 0.0267625 -0.5094658 0.6013190 2.3071010 0.3519251 0.0057498 20221202 -0.0189196 -0.0477044 -0.0280137 -0.0162801 -0.0436674 -0.0005091 -0.0053392 0.0151542 0.0139327 -0.0490842 -0.0209156 -0.0181177 -0.0504060 0.0026325 -0.0705267 -0.0038252 -0.0075309 0.0140247 -0.0761146 -0.0218806 -0.0297101 -0.0146237 0.0188773 0.0119875 -0.0313077 -0.0337831 0.0124177 0.0015482 -0.0014203 -0.0017983 0.0170400 -0.0212630 -0.0227956 -0.0002441 0.0355466 -0.0084270 0.0227861 20221205 -0.0405121 0.0223072 0.0825133 0.1970918 0.0255702 0.1293560 0.0388878 -0.0081009 -0.0089899 0.0632370 -0.0453930 0.0085137 0.0098939 0.0254118 0.0610704 0.0949566 0.1953603 0.0212568 0.0640565 0.0225785 0.1029671 0.0226141 -0.0212162 -0.0820496 0.0817224 0.1011997 0.1075311 0.0634204 0.0391413 0.0111771 0.2488875 0.0171486 0.4178865 0.0354057 -0.0018532 -0.0735125 0.0152227 20221206 -0.0722524 0.0192407 0.0169165 0.0381294 -0.0080491 0.0447338 -0.0307030 0.0590366 0.5554795 -0.0076223 -0.1214223 -0.0000285 0.0225150 0.0226381 0.0062134 0.0175863 -0.0225588 0.0460868 0.0327313 0.0168620 0.1035405 0.0792072 0.0465640 -0.0169728 0.0041204 0.0023261 0.0086808 -0.0037956 0.0229292 -0.0052343 0.0433953 0.0001183 0.3052588 1.8219575 7.0273402 1.0988859 0.0704390 20221207 -0.0679314 -0.1390638 -0.0752719 -0.0550551 -0.1040736 -0.0843923 -0.0178634 0.0880821 0.0449727 -0.0993927 -0.1257820 -0.0214412 -0.1445187 -0.0116774 -0.1146126 0.0033991 -0.0753252 -0.0691352 -0.1231335 -0.1040983 0.0182855 -0.0311994 -0.0751914 -0.4199145 -0.1467774 -0.0663596 -0.0526361 -0.1508091 -0.0370784 -0.1275912 0.0042921 -0.0918629 -0.0744702 0.3631424 1.1335628 0.3172670 -0.0984450 20221208 -0.0810127 0.0478228 0.0692034 -0.1242338 -0.3977378 0.0964116 -0.0106621 0.0318467 0.2019312 -0.1946186 0.0370493 0.0070366 -0.1104191 -0.0141156 -0.1839389 -0.0739677 0.0335682 -0.0297606 0.0657735 0.0762325 -0.1601713 0.0033812 0.1680757 -0.0034110 -0.0884723 -0.0563257 -0.0085899 0.0528167 -0.0601620 0.0638294 -0.0471382 -0.2042677 0.1013237 0.4685088 1.6374453 0.4505433 0.0260904 For convenience, save the path to the flow file you choose to use as flow.file. Example shown below: flow.file &lt;- &quot;C:\\\\EPFR\\\\daily\\\\FX-daily.csv&quot; 2.1.4 Return File The return file for this strategy should contain daily spot or forward rates for each of the currencies in the flow file, over the period of time the user wants to backtest. The user can choose to use spot rate data found with their own resources, or they have the option to use spot rate files EPFR provides, which is available in the users EPFR FTP connection under the Returns folder(more information available in Returns Information). For this demonstration, we will be using the file ExchRates-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what this file contains: Returns/daily/ExchRates-daily.csv XDR AUD EGP INR MXN NZD QAR TRY ZAR ARS BRL EUR IDR KRW NOK PHP SEK CAD CHF CLP HUF JPY PEN RUB TWD CNY CZK GBP ILS MYR PLN SGD THB JOR PKR MAD COP CNH VND KWD 20221201 1.32086 1.4681 24.5607 81.2213 19.1509 1.5717 3.6412 18.6334 17.6574 167.7258 5.1916 0.9506 15563 1299.40 9.7317 56.195 10.3045 1.3432 0.9371 880.05 391.77 135.33 3.8280 118.6895 30.624 7.0534 23.1727 0.8165 3.3931 4.4070 4.4581 1.3535 34.980 NA 223.6846 10.5894 4765.75 7.0385 24518 0.30755 20221202 1.32836 1.4727 24.5607 81.3175 19.4001 1.5622 3.6412 18.6392 17.5052 168.0862 5.2190 0.9492 15428 1300.20 9.7780 55.765 10.3235 1.3468 0.9372 883.60 389.52 134.31 3.8380 118.6895 30.589 7.0535 23.1248 0.8143 3.4144 4.3883 4.4403 1.3516 34.765 NA 223.6223 10.5480 4776.65 7.0210 24477 0.30755 20221205 1.33016 1.4930 24.5623 81.7975 19.7548 1.5831 3.6412 18.6359 17.4239 169.1496 5.2830 0.9532 15468 1292.65 9.9484 56.025 10.4152 1.3588 0.9426 895.92 394.20 136.75 3.8570 118.6895 30.450 6.9625 23.1662 0.8204 3.4053 4.3685 4.4901 1.3576 34.765 NA 223.8291 10.5802 4839.85 6.9750 24001 0.30635 20221206 1.32609 1.4952 24.5650 82.6100 19.7710 1.5816 3.6411 18.6334 17.3365 169.4926 5.2379 0.9554 15618 1319.15 10.0242 55.982 10.4154 1.3653 0.9420 879.28 392.33 137.00 3.8350 118.6895 30.634 6.9950 23.2428 0.8242 3.4292 4.3950 4.4807 1.3590 35.050 NA 224.0537 10.5870 4834.00 6.9807 24033 0.30685 20221207 1.32372 1.4871 24.5921 82.4800 19.6764 1.5737 3.6411 18.6417 17.1622 169.8889 5.2164 0.9518 15638 1321.75 10.0237 55.470 10.3882 1.3653 0.9408 866.66 391.15 136.62 3.8224 118.6895 30.655 6.9700 23.1137 0.8195 3.4355 4.3970 4.4640 1.3554 35.097 NA 224.1791 10.5754 4827.99 6.9619 23962 0.30700 20221208 1.32531 1.4772 24.5800 82.4325 19.6301 1.5680 3.6411 18.6419 17.1659 169.8889 5.2169 0.9473 15621 1318.05 9.9658 55.470 10.3329 1.3595 0.9370 866.66 395.75 136.67 3.8224 118.6895 30.695 6.9674 23.0138 0.8174 3.4311 4.4015 4.4357 1.3536 34.833 NA 224.1841 10.5428 4827.99 6.9613 23915 0.30690 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\ExchRates-daily.csv&quot; "],["strategy-implementation-1.html", "2.2 Strategy Implementation", " 2.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the flow and return files to our R studio workspace. x &lt;- mat.read(flow.file) # GET FLOW PERCENTAGE &quot;C:\\\\EPFR\\\\daily\\\\FX-daily.csv&quot; y &lt;- 1/mat.read(ret.file) # GET EXCHANGE RATES &quot;C:\\\\EPFR\\\\returns\\\\ExchRates-daily.csv&quot; One of our first options is choosing the universe we want to use. EPFR has tested this signal within three different universes of countries: ACWI (All Country World Index), G10 (ten of the most heavily traded currencies), and EM (Emerging Markets). For this example, we choose ACWI, which includes 52 countries and 37 currencies. idx &lt;- &quot;ACWI&quot; # ACWI/G10/EM Whenever the spot for Chinese currency CNH is N/A, we fill any gaps with spot rates for Chinese currency CNY. y$CNY &lt;- ifelse(is.na(y$CNH), y$CNY, y$CNH) # USE CNH WHENEVER POSSIBLE We must also add a column for the US Dollar (USD) to ensure that we can trade this currency when necessary. Since at this stage of the analysis, all other currencies spot rates are presented against the USD, set the USD spot to 1 across time. y$USD &lt;- rep(1, dim(y)[1]) # ADD IN USD Depending on what universe \\(idx\\) the user chooses to test, the flow file \\(x\\) and return file \\(y\\) must both be subset to the correct currencies. Running the code below, which calls from functions contained in library('EPFR'), helps identify every member that was included the selected universe during the period over which we are backtesting. idx.curr &lt;- unique(Ctry.info(Ctry.msci.members(idx, &quot;&quot;), &quot;Curr&quot;)) # CURRENCY CLASSIFICATION 2016 if (idx != &quot;G10&quot;) idx.curr &lt;- union(Ctry.info(Ctry.msci(idx)[, &quot;CCODE&quot;], &quot;Curr&quot;), idx.curr) else idx &lt;- NULL # CAPTURE INDEX CHANGES if (is.element(&quot;EM&quot;, idx)) idx.curr &lt;- setdiff(idx.curr, c(&quot;USD&quot;, &quot;EUR&quot;)) # ENSURE NO OVERLAP BETWEEN DEVELOPED AND EM CURRENCIES x &lt;- x[, is.element(dimnames(x)[[2]], idx.curr)] # SUBSET TO CURRENCIES OF INTEREST Next, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(y\\) to use the same currencies, in the same order as \\(x\\). In this step, we will also divide each exchange rate by the historical USD/SDR spot. This resets the base currency away from the dollar and allows our backtests to include this currency in portfolio returns. y &lt;- y[, dimnames(x)[[2]]]/y[, &quot;XDR&quot;] # CURRENCIES OF INTEREST ON AN SDR BASE (OTHERWISE &lt;get.fwdRet&gt; THINKS THE USD NEVER TRADES!) * Note: subsetting can also be done when creating the flow and return files 2.2.1 Compounding Flows Next, we set up a variable for our lookback period, which can also be called a flow window. This variable will be the window of time we use to create a trailing compounded daily percentage flow. The lookback period we choose for our demonstrations is 20 days. lookback &lt;- 20 # FLOW WINDOW (IN WEEKDAYS) - 20 day look back period Using a function from the library('EPFR.r'), compound.flows() compounds our daily percentage flow over the trailing lookback period for each currency. x &lt;- compound.flows(x, lookback, F) # COMPOUND FLOWS ARS AUD BRL CAD CHF CLP CNY CZK EGP GBP HUF IDR ILS INR JPY KRW MXN MYR NOK NZD PEN PHP PLN RUB SEK SGD THB TRY TWD ZAR USD EUR COP PKR MAD VND KWD 20221201 -0.5940234 0.3657387 0.4224990 0.4808457 -0.1104243 0.7288517 0.5368734 1.2073799 2.172433 -0.2525826 0.6709283 0.3157191 0.1549135 0.7480240 0.0830883 0.5472824 0.1438829 1.2508022 0.1516190 0.6233808 0.6989874 1.2429050 1.0089310 -0.3533873 -0.1242647 0.0363202 0.7638555 1.0299772 0.8224584 0.9616983 0.2340294 -0.2956698 0.7990553 4.993004 19.03328 2.872918 1.3832349 20221202 -0.6018448 0.2792255 0.3352712 0.3530235 -0.1782489 0.6642326 0.5487682 1.1900412 2.108605 -0.3305223 0.5568988 0.3119253 0.0300507 0.7260748 -0.0464898 0.5063724 0.0895826 1.1742892 0.0380753 0.5548919 0.5469424 1.1683882 0.9636947 -0.6705598 -0.1585176 -0.0163002 0.7206426 0.9597821 0.7769506 0.8975888 0.2407246 -0.3160371 0.7286986 4.795951 19.08983 2.902651 1.2998187 20221205 -0.6160456 0.1724398 0.2548420 0.4085384 -0.2302423 0.6119402 0.4214132 0.9716324 1.935081 -0.3257607 0.3568259 0.1489173 -0.0332946 0.5683554 -0.0782973 0.3958889 0.1438615 0.9805594 0.0425980 0.4628725 0.3995123 0.9963927 0.7092462 -0.7832803 -0.1649645 -0.0214380 0.6369698 0.8515274 0.6291915 0.7083653 0.3859377 -0.3391601 0.9768418 4.826099 19.05836 2.821159 1.1056957 20221206 -0.7007855 0.2299679 0.1912819 0.4133465 -0.1920437 0.5767637 0.3639880 0.9784491 2.506006 -0.2902201 0.1991608 0.1311528 0.0457574 0.5500984 -0.0182475 0.3706797 0.0387214 0.9773771 0.1009406 0.5108701 0.3970704 1.0194096 0.7023463 -0.7908906 -0.1244939 0.0141360 0.6079116 0.7933953 0.6100951 0.6587183 0.4078085 -0.2624574 1.1987567 6.736285 27.46648 4.050283 1.1218599 20221207 -0.7913361 0.0621649 0.0337343 0.3036316 -0.3297991 0.4167141 0.3012657 0.9721833 2.479338 -0.4188398 0.0056754 0.0761375 -0.1363917 0.4779639 -0.1626054 0.3087572 -0.1062535 0.8079657 -0.0491937 0.3828041 0.2581603 0.9155333 0.5307903 -1.2414975 -0.3010304 -0.0668150 0.4585935 0.5410927 0.4917310 0.4442067 0.3851289 -0.4016989 1.0400281 7.133620 28.80945 4.396673 0.9213861 20221208 -0.8418411 0.0746834 0.0975710 0.1825067 -0.6963594 0.4959507 0.2903070 0.9949993 2.732097 -0.5799311 0.0722522 0.0902998 -0.2832261 0.4579744 -0.3692697 0.2152557 -0.0728351 0.7463247 0.0600291 0.3366798 0.0905773 0.8908209 0.6759885 -1.2450530 -0.3826158 -0.1471434 0.4334176 0.5789301 0.3977577 0.4806812 0.3612104 -0.5992051 1.1689154 7.590067 30.60849 4.876754 0.9344611 2.2.2 Ranking Currencies Next, we sort each of the currencies in our universe into five equal bins based on their compounded percentage flow values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our daily percentage flow data compounded over a desired period, exchange rate data, and our selected universe. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+1 day lag and is released around 5:00 pm EST, we account for a T+2 day delay in our model. Users interested in more timely signals can also use the T+2 open prices for backtesting purposes. Alternatively, EPFRs Premium Daily offering collects an earlier release of end-of-day data which includes a significant subset of its original fund-level flow information. delay &lt;- 2 # DELAY IN KNOWING DATA (IN WEEKDAYS) - data takes time to have It is also important to note that this model will need to be re-balanced weekly. The day of the week the rebalancing occurs is at the users discretion. For this example we will set the day of the week to trade as Friday. doW &lt;- 5 # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input the return horizons that they are interested in here. For this example, we define a return horizon for weekly, fortnightly, monthly, bi-monthly, quarterly, and semi-annual rebalancing. hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS) - holding periods Now that we have defined all of our inputs, to rank the currencies into quintiles by their 20-day percentage flow, we call the function bbk() for a one-week holding period. By adding the selected backtesting universe as an input to the function, we can ensure that the model tracks additions and removals of currencies over time, and is therefore able to identify all members on a point-in-time basis. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx) 2.2.3 Model 20-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] ARS AUD BRL CAD CHF CLP CNY CZK EGP GBP HUF IDR ILS INR JPY KRW MXN MYR NOK NZD PEN PHP PLN RUB SEK SGD THB TRY TWD ZAR USD EUR COP PKR MAD VND KWD 20221230 NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 20221223 NA 3 4 2 5 2 3 1 1 5 5 3 4 3 4 3 5 1 4 3 4 1 2 NA 5 4 2 2 3 2 NA 5 1 NA NA NA 1 20221216 NA 3 4 2 5 2 3 1 1 5 5 4 4 2 4 3 5 1 4 3 4 1 2 NA 5 4 2 2 3 3 2 5 1 NA NA NA 1 20221209 NA 4 4 3 5 2 3 1 1 5 4 4 5 2 5 3 4 1 4 3 3 1 2 NA 5 4 2 2 2 2 3 5 1 NA NA NA 1 20221202 NA 4 4 3 5 2 3 1 1 5 3 4 5 3 4 3 4 1 4 3 2 1 2 NA 5 5 2 2 2 2 4 5 1 NA NA NA 1 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 20221230 NA NA NA NA NA NA NaN 20221223 -0.6773156 0.1876951 0.3914613 -0.1935814 0.2264971 -0.9038127 0.3502183 20221216 -0.2285290 0.0173119 0.1991964 0.2014266 -0.2258623 -0.0026668 0.6364195 20221209 0.3103277 -0.5951894 -0.0661117 0.4634301 -0.0904968 0.4008245 -0.1902268 20221202 0.2504880 0.7269355 -0.3562323 -0.7883338 0.1773757 0.0731123 -0.1915118 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 2.2.4 Performance Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay, idx)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Weekly AnnMn 2.7 -0.3 -0.5 0.0 -1.8 4.6 -3.0 AnnSd 3.6 3.0 3.3 3.8 3.8 6.0 9.8 Sharpe 77.0 -10.9 -14.2 0.5 -47.7 75.7 -30.9 HitRate 4.5 0.1 0.0 -0.1 -1.0 3.7 -2.6 Beta 0.0 -0.1 -0.1 0.0 0.1 -0.1 1.0 Alpha 2.7 -0.5 -0.7 0.1 -1.5 4.3 0.0 DrawDn -8.9 -16.4 -14.5 -18.3 -36.3 -11.8 -77.7 DDnBeg 20190830 20081024 20071012 20130705 20080523 20190823 20110429 DDnN 98 595 485 380 749 108 598 AnnTo 1144 2271 2509 2429 1301 2445 0 Fortnightly AnnMn 2.4 -0.4 -0.1 -0.6 -1.2 3.6 -3.1 AnnSd 3.5 3.0 3.2 3.4 3.7 5.9 10.1 Sharpe 69.6 -13.5 -3.9 -17.9 -33.2 62.0 -30.2 HitRate 4.4 -0.6 0.9 1.7 -0.8 4.1 -0.6 Beta 0.0 0.0 -0.1 0.0 0.1 -0.1 1.0 Alpha 2.4 -0.5 -0.3 -0.5 -0.9 3.3 0.0 DrawDn -8.5 -16.6 -10.5 -27.5 -27.1 -16.1 -76.9 DDnBeg 20195624 20085254 20076210 20110166 20080478 20190617 20110579 DDnN 42 162 164 274 320 62 296 AnnTo 881 1487 1584 1574 990 1870 0 Monthly AnnMn 2.2 -0.3 0.4 -1.0 -1.2 3.4 -3.0 AnnSd 3.4 2.8 3.1 3.4 3.7 6.0 10.5 Sharpe 65.1 -9.9 11.9 -30.4 -32.0 57.0 -28.7 HitRate 6.5 -0.1 2.9 -0.1 -1.3 4.5 -1.9 Beta 0.0 0.0 -0.1 0.0 0.1 -0.1 1.0 Alpha 2.1 -0.4 0.2 -0.9 -0.9 3.0 0.0 DrawDn -9.2 -15.6 -10.9 -27.6 -24.9 -14.8 -75.8 DDnBeg 20185568 20078191 20080990 20122892 20075844 20192816 20110548 DDnN 37 152 75 112 165 32 148 AnnTo 655 906 939 914 732 1387 0 Bi-Monthly AnnMn 1.3 0.0 0.4 -0.7 -0.9 2.2 -3.2 AnnSd 3.2 2.7 2.9 3.3 3.6 5.7 11.0 Sharpe 38.9 0.2 14.4 -20.7 -26.6 38.8 -28.9 HitRate 4.6 1.0 4.0 -0.4 -0.9 4.2 -4.0 Beta -0.1 0.0 0.0 0.0 0.1 -0.1 1.0 Alpha 1.1 -0.1 0.3 -0.5 -0.7 1.8 0.0 DrawDn -7.9 -10.4 -12.1 -21.2 -22.4 -11.1 -73.5 DDnBeg 20178449 20091634 20084116 20109758 20087558 20148439 20110617 DDnN 12 42 34 53 70 14 66 AnnTo 345 424 433 433 365 710 0 Quarterly AnnMn 1.3 0.2 0.1 -0.6 -0.9 2.2 -3.3 AnnSd 3.0 2.7 2.8 3.3 3.7 5.5 11.2 Sharpe 41.3 6.9 6.7 -19.3 -25.4 40.3 -29.7 HitRate 7.3 0.7 1.1 -0.6 -2.5 6.3 -7.4 Beta -0.1 0.0 0.0 0.0 0.1 -0.2 1.0 Alpha 1.1 0.1 0.1 -0.6 -0.6 1.7 0.0 DrawDn -7.7 -10.7 -12.3 -20.7 -21.5 -9.8 -71.3 DDnBeg 20148201 20097454 20100664 20102271 20088438 20148252 20108315 DDnN 10 20 21 39 47 7 46 AnnTo 257 306 301 306 265 522 0 Semi-Annual AnnMn 1.0 0.5 -0.1 -0.3 -1.0 2.0 -3.4 AnnSd 3.1 2.7 2.8 3.1 3.4 5.3 11.8 Sharpe 31.1 18.4 -4.2 -9.4 -31.3 38.0 -28.9 HitRate 8.4 5.0 -1.1 1.0 -4.6 8.6 -9.9 Beta 0.0 0.0 0.0 0.0 0.1 -0.1 1.0 Alpha 0.8 0.4 -0.2 -0.3 -0.8 1.6 0.0 DrawDn -6.8 -8.7 -12.2 -16.9 -21.6 -11.8 -67.4 DDnBeg 20130244 20101065 20084601 20109159 20106900 20113664 20105973 DDnN 4 9 16 16 19 5 24 AnnTo 135 156 156 157 146 281 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2007 -7.8360034 0.7784924 -1.4774981 2.3996230 6.1353861 -13.9713895 16.0985100 31 2008 4.6375210 -1.6014541 -0.6020764 0.8319950 -3.2659855 7.9035065 -13.1533701 52 2009 1.5601528 0.4728078 -0.2398714 -2.0667256 -0.4248972 1.9850500 10.2375370 52 2010 1.5754798 -3.3674781 -2.0555851 7.1616423 -2.7720355 4.3475154 2.9512123 53 2011 7.0131670 -4.6978445 1.2435742 0.1744792 -4.3795708 11.3927378 -4.1065988 52 2012 1.7869536 0.2928114 -3.1586101 2.9275709 -1.3886712 3.1756248 3.4833257 52 2013 5.7106674 -1.5637326 -0.5121886 -3.5315647 -0.4958326 6.2065001 -4.9124563 52 2014 7.1731441 1.6506633 -0.7707926 -1.4234973 -6.6673785 13.8405226 -16.2172346 52 2015 7.8482385 -0.2984466 -1.8293253 -4.9756229 0.1341678 7.7140707 -14.6408438 52 2016 4.6023613 0.0341821 -4.1909022 -0.6751532 0.4215097 4.1808516 -6.0898082 53 2017 2.8555923 -0.9374345 1.9506039 -2.1033874 -1.5728443 4.4284367 12.5654405 52 2018 3.1978511 0.5139022 0.5724439 -0.6389634 -3.6630997 6.8609507 -9.3094558 52 2019 -0.7877788 -1.7878981 2.2889560 1.2438881 -1.0945793 0.3068004 -0.9546108 52 2020 -2.9491378 2.3086817 1.6519839 -3.2017083 2.3657727 -5.3149105 4.7790869 52 2021 -1.6253314 0.3714917 -0.3979036 6.5067803 -4.0215014 2.3961699 -8.2316355 53 2022 4.8364258 3.0111329 -0.3480962 -1.6046218 -5.3404069 10.1768327 -13.4149139 52 "],["flow-percentage-country-strategy.html", "3 Flow-Percentage Country Strategy", " 3 Flow-Percentage Country Strategy The Flow-Percentage Country Strategy is an equity-based rotation strategy, which ranks different countries across a customized universe of both developed and emerging markets. This approach uses the stated allocations of equity funds with a cross-border focus and calculates the percentage flow into countries. "],["data-2.html", "3.1 Data", " 3.1 Data The Flow-Percentage Country Strategy developed by EPFR is based on the percentage flow into countries. In this section, the reader will gain an understanding of the aggregations which can be used to create a signal as well as the methodology behind daily percentage flow calculations. 3.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy requires: Equity funds with a cross-border focus. These are essentially any fund that has a mandate spanning more than one country. The vast majority of these will be global and regional funds. Funds must report both daily flows and country allocations, since these values are needed to calculate the daily percentage flow. Cross-border equity funds, which report their country allocations and their daily fund flows, are a subset of those that only report their fund flows to EPFR. The figure below shows EPFRs coverage of this universe over time compared to our total monthly and daily coverages. AUM ($BB) of Equity funds All Funds Cross-border Monthly Flows Daily Flows Daily Flows Daily Flows &amp; Ctry Alloc 2007 6,241 2,717 1,173 446 2008 5,798 2,743 1,116 355 2009 4,794 2,273 887 303 2010 5,889 2,840 1,143 362 2011 7,595 3,932 1,601 449 2012 7,945 4,107 1,502 359 2013 10,109 5,525 1,964 606 2014 12,488 6,879 2,556 850 2015 13,561 7,575 2,755 927 2016 13,748 7,672 2,833 964 2017 16,148 9,385 3,656 1,326 2018 18,459 10,845 4,203 1,560 2019 19,075 11,096 4,063 1,718 2020 20,245 12,247 4,516 1,809 2021 28,451 17,390 6,494 2,611 2022 25,406 15,694 5,479 2,258 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only active, passive, ETFs or mutual funds, or only institutional or retail share class flows and assets. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level flow and allocation files or by reaching out to EPFRs Quant Team for customized aggregations. 3.1.2 Daily Percentage Flow To begin calculating the daily percentage flow, we start with our subset of cross-border equity funds. To calculate the dollar flow into a country, we scale a funds flow by multiplying it against its stated country allocation, on that day. We apply the same procedure to all funds with fund flow and country allocation information and then sum the flows for each country across all funds, to get the total dollar flow into a country. EPFR releases country allocations of all funds on the \\(23^{\\text{rd}}\\) of each month (or the next available business day) at a monthly frequency. Hence, our calculation assumes constant country weightings between two consecutive release dates within the month. \\[\\text{Total Flow}_{c,t} = \\sum^{N}_{i=m}{\\text{Flow}_{i,c,t} \\times \\text{Country Allocation}_{i,c}}\\] Where: \\(\\text{Total Flow}\\) = the total dollar flow into a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) We will want to normalize this figure. So, we repeat the process across the same funds Assets held under Management (AuM), to get the total AuM held in a country. \\[\\text{Total AuM}_{c,t} = \\sum^{N}_{i=m}{\\text{AuM}_{i,c,t} \\times \\text{Country Allocation}_{i,c}}\\] Where: \\(\\text{Total AuM}\\) = the total assets held in a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) Finally, to find the daily percentage flow for a country, we divide the total flow by the total AuM held in a country. \\[\\text{Percentage Flow}_{c,t} = 100 \\times \\frac{\\text{Total Flow}_{c,t}}{\\text{Total AuM}_{c,t}}\\] Where: \\(\\text{Percentage Flow}\\) = the scaled flow as a percentage into a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) We repeat this across all different countries for the entire history. 3.1.3 Aggregate Flow File Users may create flow percentages for their desired country aggregations and granularity using the methodology described in the previous section. Users also have the option to use the Flow-Percentage Country Strategy files EPFR provides, which are updated daily at 5:00 PM EST with a T+1 day lag, and are available in the users EPFR FTP connection under the Strategies folder. There are two different types of Flow-Percentage Country Strategy files available, the standard option we have contains aggregate percentage flow data for 53 countries in the ACWI, EAFE and Emerging Market country universe. The other file available only contains Emerging and Developed Market (EMDM) aggregate percentage flow data. For this demonstration, we will be using the file FloPctCtry-daily.csv, which can be downloaded from the users FTP under the folder Strategies/daily and can be stored in the users local folder EPFR/daily. Below shows a snippet of what this file contains: Strategies/daily/FloPctCtry-daily.csv AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US JO MA PK AE QA SA KW 20221201 0.0082172 -0.1373853 -0.1685998 -0.0299551 -0.0588564 -0.0307035 -0.0999231 -0.1128431 -0.3022166 -0.0267607 0.0138949 -0.4700456 -0.0657525 -0.1268418 -0.0919432 -0.0436343 -0.0397615 0.0251304 -0.1496563 -0.5094658 -0.0142500 0.1940810 -0.0322191 -0.0059505 0.0145115 -0.0579933 -0.2640881 -0.0459837 -0.0866961 -0.0749154 -0.1097745 0.0813068 -0.2054332 -0.0196845 0.0941430 0.0048852 0.0567956 0.0453213 -0.0052570 0.0563133 0.0551750 0.0134235 0.0642768 -0.1867222 -0.1897228 0.1893650 2.3071010 0.6013190 -0.0268271 -0.0213599 -0.0241962 0.0057498 20221202 -0.0477044 -0.0280137 -0.0162801 -0.0053392 -0.0181177 0.0026325 -0.0705267 -0.0038252 -0.0075309 0.0140247 -0.0146237 0.0119875 -0.0337831 0.0124177 0.0015482 -0.0014203 -0.0017983 -0.0189196 -0.0005091 -0.0227956 0.0151542 0.0139327 -0.0209156 -0.0504060 -0.0218806 -0.0761146 -0.0297101 0.0188773 -0.0313077 -0.0436674 -0.0490842 0.0379807 0.0019978 -0.0377601 -0.0094423 -0.0129547 -0.0313622 -0.0093106 -0.0242845 -0.0250811 -0.0300145 -0.0413764 -0.0073068 -0.0353648 0.0210618 -0.1964602 0.0355466 -0.0002441 0.0066170 0.0128726 0.0119270 0.0227861 20221205 0.0223072 0.0825133 0.1970918 0.0388878 0.0085137 0.0254118 0.0610704 0.0949566 0.1953603 0.0212568 0.0226141 -0.0820496 0.1011997 0.1075311 0.0634204 0.0391413 0.0111771 -0.0405121 0.1293560 0.4178865 -0.0081009 -0.0089899 -0.0453930 0.0098939 0.0225785 0.0640565 0.1029671 -0.0212162 0.0817224 0.0255702 0.0632370 0.0144565 0.2081413 0.0091668 -0.0147028 0.0294817 0.0070184 0.0215880 -0.0162663 0.0103360 0.0100211 -0.0529251 -0.0074901 0.2486099 0.2656250 0.0190637 -0.0018532 0.0354057 0.0039361 -0.0033072 0.0014794 0.0152227 20221206 0.0192407 0.0169165 0.0381294 -0.0307030 -0.0000285 0.0226381 0.0062134 0.0175863 -0.0225588 0.0460868 0.0792072 -0.0169728 0.0023261 0.0086808 -0.0037956 0.0229292 -0.0052343 -0.0722524 0.0447338 0.3052588 0.0590366 0.5554795 -0.1214223 0.0225150 0.0168620 0.0327313 0.1035405 0.0465640 0.0041204 -0.0080491 -0.0076223 0.0097317 -0.0155778 0.0100643 0.0079297 -0.0044997 -0.0047326 -0.0158246 -0.0078131 0.0175245 0.0105277 -0.0105779 -0.0024051 0.0017378 0.0449389 0.0796408 7.0273402 1.8219575 0.0510315 0.0607994 0.0662449 0.0704390 20221207 -0.1390638 -0.0752719 -0.0550551 -0.0178634 -0.0214412 -0.0116774 -0.1146126 0.0033991 -0.0753252 -0.0691352 -0.0311994 -0.4199145 -0.0663596 -0.0526361 -0.1508091 -0.0370784 -0.1275912 -0.0679314 -0.0843923 -0.0744702 0.0880821 0.0449727 -0.1257820 -0.1445187 -0.1040983 -0.1231335 0.0182855 -0.0751914 -0.1467774 -0.1040736 -0.0993927 -0.1099925 -0.1059852 -0.0898489 -0.1267584 -0.0916032 -0.0977398 -0.0515893 -0.0533180 -0.0928605 -0.0841324 -0.0035842 -0.0959443 0.0372996 0.0071908 -0.0704670 1.1335628 0.3631424 -0.0926825 -0.0862161 -0.0585917 -0.0984450 20221208 0.0478228 0.0692034 -0.1242338 -0.0106621 0.0070366 -0.0141156 -0.1839389 -0.0739677 0.0335682 -0.0297606 0.0033812 -0.0034110 -0.0563257 -0.0085899 0.0528167 -0.0601620 0.0638294 -0.0810127 0.0964116 0.1013237 0.0318467 0.2019312 0.0370493 -0.1104191 0.0762325 0.0657735 -0.1601713 0.1680757 -0.0884723 -0.3977378 -0.1946186 0.0742293 0.0242617 -0.1333207 0.0260302 -0.3117769 -0.2567409 0.0925668 -0.3838237 -0.0127299 -0.1071186 -0.0513869 -0.0617630 -0.0247254 -0.0553428 0.1909743 1.6374453 0.4685088 0.0404959 0.0400483 0.0562480 0.0260904 For convenience, save the path to the flow file you choose to use as flow.file. Example shown below: flow.file &lt;- &quot;C:\\\\EPFR\\\\daily\\\\FloPctCtry-daily.csv&quot; 3.1.4 Return File The return file for this strategy should contain daily passive equity ETF returns for each of the countries in the flow file, over the period of time the user wants to backtest. The user can choose to use return data found with their own resources, or they have the option to use a file EPFR provides of ETF Country Returns, which is available in the users EPFR FTP connection under the Returns folder (more information available in Returns Information). The return file that EPFR provides contains Fund Return data and can be used as a proxy to equity market returns. The user can recreate these files using EPFRs daily flow data with the following equation: \\[\\text{Fund Return}_{c,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,c,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,c,t}}\\] Where: \\(\\text{Fund Return}\\) = the percentage return of country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) For this demonstration, we will be using the file PsuedoReturns-Country-ETF-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what this file contains: Returns/daily/PsuedoReturns-Country-ETF-daily.csv AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA KW 20221201 NA -1.051398 0.280116 0.267903 -0.258239 -0.049477 0.384574 0.546160 -0.353159 0.722259 -0.826145 0.255115 NA 0.548452 0.567718 0.743486 -1.082782 0.820994 0.681547 -0.451456 0.000000 1.805609 0.434550 1.174217 NA 0.804422 0.450325 1.102766 1.385536 0.569143 0.194341 -0.428842 0.141771 1.364250 1.196393 0.190484 0.529076 1.417055 0.347142 0.186162 0.911450 3.403504 0.481374 NA -0.055001 NA 0.080123 -0.073387 0.761763 -1.008192 -0.160870 20221202 NA 0.271185 -0.146287 0.547865 0.046347 -0.208467 -0.803181 -1.935626 -0.063086 0.201973 -1.297638 -0.001172 NA 0.068250 -0.203378 -0.294582 -0.768751 0.180919 0.050318 0.336782 0.000000 0.000000 0.000000 -0.146545 NA -1.212048 0.021394 0.181003 0.098234 0.284721 -0.004622 -0.172307 1.439274 0.207996 0.418131 0.081544 0.455856 -1.408948 0.000000 0.168032 -0.006222 -1.742562 0.098302 NA -0.029618 NA -0.437571 0.000000 0.097918 -0.084237 -0.051025 20221205 NA -1.453673 -1.182635 0.790572 -0.379389 -0.448835 -0.914717 -0.569740 -1.128877 -0.174389 -0.412548 0.443649 NA 0.012687 -1.232589 0.049912 0.510768 -4.063962 -0.046604 -1.799482 -1.524983 3.730659 -0.432505 -1.115899 NA 0.056129 0.000000 -0.214383 0.564252 -0.259054 0.090480 0.013551 -0.417661 0.035092 0.014322 -0.542971 -0.463007 -0.392092 0.000000 -0.285822 -0.472493 0.886397 0.026455 NA -1.442170 NA -1.601460 -0.622330 -0.774538 -1.609632 -0.222419 20221206 NA -0.100844 -1.356407 1.483660 -2.977560 -1.892386 0.050407 -1.811573 0.161747 -1.045556 1.130897 -0.235263 NA -1.275695 -0.354576 -1.737804 0.210470 -1.349062 -0.805189 1.513862 -1.314924 0.757970 -2.393864 -2.836918 NA -1.564411 -1.171991 -2.166913 -1.610993 -0.947429 -0.691664 -0.848486 -0.140677 -1.028322 -0.030871 -0.298380 -0.910285 -0.068919 -2.348950 -1.587673 -0.837205 -0.488400 -0.881127 NA -1.961241 NA -0.186893 -0.812627 -2.434782 -2.096331 -2.224862 20221207 NA -0.731817 -0.077766 -0.634553 -1.421615 -0.007653 -0.232355 -0.500070 -0.453333 -0.199532 -1.027125 -0.082402 NA -0.436370 -2.508129 -0.699818 0.119150 1.494908 0.477444 -0.439948 -0.368016 2.127647 -0.006460 -0.854382 NA -1.745163 -0.364512 0.538920 -0.996618 -0.875797 -0.479912 -0.838809 -0.666069 -0.250780 -1.558064 -0.527808 -0.647434 0.736381 0.090070 -0.522381 -0.705965 -0.588645 -0.445730 NA -0.160276 NA 0.721763 -0.848300 -0.806879 -2.575153 0.154566 20221208 NA -1.699204 0.011819 0.758715 0.491060 0.328606 -0.370710 -0.185071 0.692173 -0.107003 0.096428 -0.181745 NA 0.352863 -0.346782 -0.530016 0.044344 -1.535496 0.307510 -0.003020 -0.565681 0.696921 -0.049661 1.167997 NA 0.723129 0.541839 -0.149684 0.176535 -0.027416 -0.270993 0.071401 -0.221532 0.135160 -0.244847 -0.125963 0.139353 0.728769 0.303666 -0.223568 0.317462 -0.296285 -0.560934 NA 0.724220 NA -0.444276 -1.141529 0.109124 1.044356 0.453154 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Country-ETF-daily.csv&quot; "],["strategy-implementation-2.html", "3.2 Strategy Implementation", " 3.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the flow and return files to our R studio workspace. x &lt;- mat.read(flow.file) # GET FLOW PERCENTAGE C:\\\\EPFR\\\\daily\\\\FloPctCtry-daily.csv y &lt;- mat.read(ret.file) # GET PERCENTAGE RETURNs C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Country-ETF-daily.csv One of our first options is choosing the universe we want to use. EPFR has tested this signal within three different universes of countries: ACWI (All Country World Index), EAFE (Europe, Australasia, and the Far East), and EM (Emerging Markets). For this example, we choose ACWI, which includes 52 countries. idx &lt;- &quot;ACWI&quot; Depending on what universe \\(idx\\) the user chooses to test, the flow file \\(x\\) and return file \\(y\\) must both be subset to the correct countries. Running the code below, which calls from functions contained in library('EPFR'), helps identify every member that was included the selected universe during the period over which we are backtesting. x &lt;- x[, is.element(dimnames(x)[[2]], Ctry.msci.members.rng(idx, dimnames(x)[[1]][1], dimnames(x)[[1]][dim(x)[1]]))] # SUBSET TO INDEX COUNTRIES A few other adjustments must also be applied to our daily percentage flows data to ensure that it aligns with returns. First, the internally-generated fund returns are only available with sufficient coverage from the end of 2015 onwards. Second, fund returns for country ISO code JO are unavailable. startdate &lt;- &quot;20150512&quot; x &lt;- x[rownames(x)&gt;=startdate, ] # SUBSET TIME PERIOD x &lt;- x[, !(dimnames(x)[[2]] %in% &quot;JO&quot;)] Next, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(y\\) to use the same countries, in the same order as \\(x\\). y &lt;- y[, dimnames(x)[[2]]] # TOTAL RETURN INDEX * Note: subsetting can also be done when creating the flow and return files 3.2.1 Compounding Flows Next, we set up a variable for our lookback period, which can also be called a flow window. This variable will be the window of time we use to create a trailing compounded daily percentage flow. The lookback period we choose for our demonstrations is 20 days. lookback &lt;- 20 # FLOW WINDOW (IN WEEKDAYS) - 20 day look back period Again, using a function from the library('EPFR.r'), compound.flows() compounds our daily percentage flow over the trailing lookback period for each country. x &lt;- compound.flows(x, lookback, F) # COMPOUND FLOWS AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA KW 20221201 0.3657387 0.4224990 0.4808457 0.5368734 0.3157191 0.7480240 0.0830883 0.5472824 0.1438829 1.2508022 1.2429050 -0.3533873 0.0363202 0.7638555 1.0299772 0.8224584 0.9616983 -0.5940234 0.7288517 0.7990553 1.2073799 2.172433 0.6709283 0.1549135 0.6233808 0.1516190 0.6989874 1.0089310 -0.1242647 -0.1104243 -0.2525826 -0.0648429 -0.5851252 -0.1891037 0.0042294 -0.3867325 -0.2631415 0.8335389 -0.2720995 -0.2816058 -0.3016538 -0.7635916 -0.1538990 -0.2608068 0.2021691 19.03328 4.993004 1.1471616 1.3818455 1.2939687 1.3832349 20221202 0.2792255 0.3352712 0.3530235 0.5487682 0.3119253 0.7260748 -0.0464898 0.5063724 0.0895826 1.1742892 1.1683882 -0.6705598 -0.0163002 0.7206426 0.9597821 0.7769506 0.8975888 -0.6018448 0.6642326 0.7286986 1.1900412 2.108605 0.5568988 0.0300507 0.5548919 0.0380753 0.5469424 0.9636947 -0.1585176 -0.1782489 -0.3305223 0.0727308 -0.5828057 -0.1509296 0.0273668 -0.3884904 -0.3331824 0.7705446 -0.5453546 -0.2345844 -0.3128145 -0.6517184 -0.1853081 -0.2713762 0.2153821 19.08983 4.795951 1.0684084 1.2749777 1.2185201 1.2998187 20221205 0.1724398 0.2548420 0.4085384 0.4214132 0.1489173 0.5683554 -0.0782973 0.3958889 0.1438615 0.9805594 0.9963927 -0.7832803 -0.0214380 0.6369698 0.8515274 0.6291915 0.7083653 -0.6160456 0.6119402 0.9768418 0.9716324 1.935081 0.3568259 -0.0332946 0.4628725 0.0425980 0.3995123 0.7092462 -0.1649645 -0.2302423 -0.3257607 0.0556167 -0.4096780 -0.2586701 -0.0303832 -0.3976363 -0.3451982 0.6475459 -0.5731725 -0.2689440 -0.3455296 -0.7150814 -0.2301144 -0.1244719 0.3838026 19.05836 4.826099 0.8915754 1.0599314 1.0016124 1.1056957 20221206 0.2299679 0.1912819 0.4133465 0.3639880 0.1311528 0.5500984 -0.0182475 0.3706797 0.0387214 0.9773771 1.0194096 -0.7908906 0.0141360 0.6079116 0.7933953 0.6100951 0.6587183 -0.7007855 0.5767637 1.1987567 0.9784491 2.506006 0.1991608 0.0457574 0.5108701 0.1009406 0.3970704 0.7023463 -0.1244939 -0.1920437 -0.2902201 0.0765696 -0.3547143 -0.2022601 0.0213123 -0.3134878 -0.2769903 0.6066405 -0.5284036 -0.1749854 -0.2501154 -0.6410596 -0.1485396 -0.0846835 0.4048652 27.46648 6.736285 0.8998665 1.0616868 1.0051809 1.1218599 20221207 0.0621649 0.0337343 0.3036316 0.3012657 0.0761375 0.4779639 -0.1626054 0.3087572 -0.1062535 0.8079657 0.9155333 -1.2414975 -0.0668150 0.4585935 0.5410927 0.4917310 0.4442067 -0.7913361 0.4167141 1.0400281 0.9721833 2.479338 0.0056754 -0.1363917 0.3828041 -0.0491937 0.2581603 0.5307903 -0.3010304 -0.3297991 -0.4188398 -0.0957277 -0.5090548 -0.2991309 -0.1789525 -0.4510904 -0.4327651 0.5838153 -0.5994066 -0.3279278 -0.3849951 -0.6018392 -0.3045944 -0.0604079 0.3882161 28.80945 7.133620 0.7255044 0.8751273 0.8508713 0.9213861 20221208 0.0746834 0.0975710 0.1825067 0.2903070 0.0902998 0.4579744 -0.3692697 0.2152557 -0.0728351 0.7463247 0.8908209 -1.2450530 -0.1471434 0.4334176 0.5789301 0.3977577 0.4806812 -0.8418411 0.4959507 1.1689154 0.9949993 2.732097 0.0722522 -0.2832261 0.3366798 0.0600291 0.0905773 0.6759885 -0.3826158 -0.6963594 -0.5799311 -0.0241919 -0.4806366 -0.4215687 -0.1488005 -0.7500690 -0.6779237 0.6782364 -0.9602590 -0.3460828 -0.5015269 -0.6577265 -0.3706197 -0.0884993 0.3604298 30.60849 7.590067 0.7544367 0.9050508 0.8959919 0.9344611 3.2.2 Total Return Index We will now convert our percentage returns data \\(y\\) to total index returns indexed so that time moves forward. To do this, we will use the function ret.to.idx() from library('EPFR.r'). We will also use the functions map.rname() to ensure the row names of the matrices line up with our flow file and ret.idx.gaps.fix() to replace any NA values. Please refer to the library documentation for the complete list of parameters for these functions (tip: ?ret.to.idx(),?ret.idx.gaps.fix() ). y[is.na(y)] &lt;- 0 y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) 3.2.3 Ranking Countries Next, we sort each of the countries in our universe into five equal bins based on their compounded percentage flow values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our daily percentage flow data compounded over a desired period, the total return index data, and our selected universe. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+1 day lag and is released around 5:00 pm EST, we account for a T+2 day delay in our model. Users interested in more timely signals can also use the T+2 open prices for backtesting purposes. Alternatively, EPFRs Premium Daily offering collects an earlier release of end-of-day data which includes a significant subset of its original fund-level flow information. delay &lt;- 2 # DELAY IN KNOWING DATA (IN WEEKDAYS) - data takes time to have It is also important to note that this model will need to be re-balanced weekly. The day of the week the rebalancing occurs is at the users discretion. For this example, we will set the day of the week to trade as Friday. doW &lt;- 5 # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input the return horizons that they are interested in here. For this example we define a return horizon for weekly, fortnightly, monthly, bi-monthly, quarterly, and semi-annual rebalancing. hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS) - holding periods Now that we have defined all of our inputs, to rank the countries into quintiles by their 20-day percentage flow, we call function the bbk() for a one-week holding period. By adding the selected backtesting universe as an input to the function, we can ensure that the model tracks additions and removals of countries over time, and is therefore able to identify all members on a point-in-time basis. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx) 3.2.4 Model 20-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA KW 20221230 NA 3 2 3 4 3 3 3 4 1 1 NA NA 2 2 3 3 NA 1 1 1 1 5 4 NA 3 3 2 4 5 5 2 4 5 4 5 5 2 5 4 5 5 4 NA 1 NA NA 1 1 2 2 20221223 NA 4 2 3 3 3 4 3 5 1 1 NA NA 2 3 3 2 NA 2 1 1 1 5 4 NA 4 3 2 5 5 5 2 3 5 3 5 4 2 5 4 4 5 4 NA 1 NA NA 1 1 1 2 20221216 NA 3 2 3 3 2 4 3 5 1 1 NA NA 3 2 3 3 NA 2 1 1 1 4 4 NA 3 4 2 5 5 5 2 4 5 3 5 4 2 5 4 5 5 4 NA 2 NA NA 1 1 1 1 20221209 NA 3 3 3 3 2 4 3 4 1 1 NA NA 2 2 2 2 NA 2 1 1 1 3 4 NA 3 3 2 4 5 5 4 5 4 4 5 5 2 5 5 5 5 4 NA 3 NA NA 1 1 1 1 20221202 NA 3 3 3 3 2 4 3 3 1 1 NA NA 2 2 2 2 NA 2 1 1 1 3 4 NA 4 2 2 4 4 4 4 5 5 4 5 5 3 5 5 5 5 5 NA 3 NA NA 1 1 1 1 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 20221230 -0.9795159 -1.3743891 -0.4380914 1.0566192 1.7000695 -2.6795854 2.4790751 20221223 0.7041127 1.0115504 -0.0679902 -0.4191189 -1.1627283 1.8668411 -0.0001828 20221216 -0.6237331 0.6838879 0.0785362 -0.4426389 0.3307534 -0.9544865 0.7636063 20221209 0.5003205 1.0745838 -0.0545324 -0.7424331 -0.7410332 1.2413537 -1.4807999 20221202 0.1750194 0.1539427 -0.7111622 -0.0041247 0.4029712 -0.2279518 -1.5048217 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 3.2.5 Performance Go long the top basket and short the bottom basket. Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay, idx)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Weekly AnnMn -2.2 0.2 -0.6 -0.5 3.1 -5.3 4.3 AnnSd 6.5 5.3 4.8 5.1 7.3 12.1 15.1 Sharpe -33.8 4.1 -12.8 -9.8 43.1 -43.9 28.2 HitRate 0.3 2.3 -1.0 -3.0 3.0 -3.8 6.3 Beta -0.1 0.0 0.0 0.1 0.0 -0.1 1.0 Alpha -1.8 0.1 -0.5 -0.7 3.0 -4.8 0.0 DrawDn -26.3 -24.6 -10.3 -15.5 -17.5 -59.9 -40.0 DDnBeg 20150807 20161230 20151002 20190412 20211015 20150807 20180126 DDnN 207 186 68 185 20 323 112 AnnTo 1147 2288 2350 2189 1173 2320 0 Fortnightly AnnMn -4.2 0.5 -0.1 1.2 2.7 -6.8 4.4 AnnSd 6.3 5.2 4.6 5.2 7.5 12.0 15.9 Sharpe -66.7 10.3 -0.1 22.6 35.3 -57.0 27.9 HitRate -4.9 -1.1 0.1 3.2 3.2 -4.7 6.9 Beta -0.1 0.0 0.0 0.0 0.1 -0.2 1.0 Alpha -3.8 0.6 0.0 1.0 2.3 -6.1 0.0 DrawDn -37.6 -21.5 -11.3 -12.2 -16.5 -68.9 -36.0 DDnBeg 20150810 20160670 20155664 20195763 20215564 20150818 20180122 DDnN 157 105 93 38 15 168 56 AnnTo 865 1467 1527 1440 904 1770 0 Monthly AnnMn -5.0 0.3 1.1 2.2 1.5 -6.6 4.4 AnnSd 6.1 5.2 4.5 5.0 6.9 11.1 16.3 Sharpe -82.8 6.9 23.8 44.7 21.6 -58.6 27.0 HitRate -10.5 1.1 1.4 4.9 6.0 -6.7 8.0 Beta -0.1 0.0 0.0 0.0 0.1 -0.2 1.0 Alpha -4.6 0.3 1.1 2.0 1.2 -5.9 0.0 DrawDn -42.5 -20.4 -8.5 -9.8 -15.6 -65.8 -32.3 DDnBeg 20153139 20160749 20183166 20193190 20217869 20153212 20180140 DDnN 92 49 13 26 8 83 28 AnnTo 657 912 909 885 680 1337 0 Bi-Monthly AnnMn -4.7 0.0 1.1 2.0 1.7 -6.4 4.3 AnnSd 6.1 5.5 4.2 4.7 7.0 11.5 16.2 Sharpe -79.5 1.3 24.7 41.1 24.8 -57.7 26.4 HitRate -15.9 -2.9 2.1 7.2 8.7 -12.6 11.0 Beta -0.2 0.0 0.0 0.0 0.1 -0.2 1.0 Alpha -4.1 -0.1 1.1 1.8 1.3 -5.4 0.0 DrawDn -40.7 -22.0 -8.5 -8.9 -15.9 -63.9 -27.4 DDnBeg 20155972 20158572 20177292 20178397 20204958 20157084 20189013 DDnN 37 22 14 9 9 31 8 AnnTo 368 435 436 441 360 728 0 Quarterly AnnMn -3.6 -0.3 0.6 1.4 2.0 -5.5 4.4 AnnSd 6.1 5.5 4.2 4.5 6.8 11.4 15.5 Sharpe -59.5 -4.5 14.9 30.1 31.3 -50.3 29.7 HitRate -11.6 -1.1 4.5 5.7 8.9 -10.0 10.9 Beta -0.2 0.0 0.0 0.0 0.1 -0.3 1.0 Alpha -2.8 -0.5 0.5 1.3 1.6 -4.4 0.0 DrawDn -30.3 -20.6 -9.9 -10.1 -14.4 -52.0 -24.0 DDnBeg 20155308 20157615 20167678 20176972 20199133 20154608 20184230 DDnN 26 16 12 7 6 21 5 AnnTo 274 310 311 309 268 543 0 Semi-Annual AnnMn -1.7 -0.6 0.5 1.3 0.5 -2.2 4.4 AnnSd 5.6 5.2 4.2 4.7 6.2 10.5 14.7 Sharpe -31.5 -10.7 12.2 31.0 3.4 -17.2 30.5 HitRate -12.8 -1.6 0.6 8.9 1.9 -7.1 13.2 Beta -0.1 0.0 0.0 0.0 0.1 -0.2 1.0 Alpha -1.1 -0.7 0.3 1.3 0.1 -1.2 0.0 DrawDn -19.2 -15.9 -9.0 -8.0 -14.7 -34.6 -18.3 DDnBeg 20157332 20162195 20169563 20186938 20189197 20153850 20183313 DDnN 11 7 5 4 5 8 3 AnnTo 142 163 163 158 154 296 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2015 5.801458 7.162825 -1.6639642 -10.3994494 -0.900869 6.702327 -21.503039 28 2016 -4.572778 2.518428 -6.8803200 0.7877622 8.146908 -12.719686 8.597562 53 2017 -14.536523 -4.427215 7.5354050 8.7362894 2.042971 -16.579494 18.184842 52 2018 0.551314 -4.424155 -0.4876435 2.0613435 2.543231 -1.991917 -12.928199 52 2019 -2.748574 -2.953028 -1.4795042 -2.0523312 9.076181 -11.824755 15.833733 52 2020 5.715966 -6.455247 2.4465946 -5.9540822 4.415711 1.300256 5.461309 52 2021 -3.321829 -1.503479 -0.0214779 0.2565294 4.799766 -8.121595 13.159976 53 2022 -0.026752 17.702258 -4.8414908 -2.5653153 -9.280084 9.253333 -10.406643 52 "],["flow-percentage-sector-strategy.html", "4 Flow-Percentage Sector Strategy", " 4 Flow-Percentage Sector Strategy The Flow-Percentage Sector Strategy is an equity-based rotation strategy, which ranks different sectors across a customized universe of geographic regions. This approach uses daily active fund flows in conjunction with monthly sector and country allocations. "],["data-3.html", "4.1 Data", " 4.1 Data The Flow-Percentage Sector Strategy developed by EPFR is based on the percentage flow into sectors weighted by the regional emphasis of each fund. In this section, the reader will gain an understanding of the aggregations which can be used to create a signal as well as the methodology behind daily percentage flow calculations. 4.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy requires: Active equity funds with a cross-border focus. These are essentially any active fund that has a mandate spanning more than one country. Funds with a geographic mandate confined to the country or region of interest (e.g. for the US sector, we look only at funds that have a mandate to invest in the United States). Funds must report both daily flows with monthly sector and country allocations, since these values are needed to calculate the daily percentage flow. Active cross-border equity funds, which report their sector allocations, country allocations and their fund flows have grown substantially over time. The figure below shows EPFRs coverage over time of funds used to create this signal for different countries and regions. Assets ($BB) held in each region by active cross-border equity funds reporting flows daily EM Japan UK Eurozone US 2007 337 87 137 332 137 2008 316 73 111 238 110 2009 247 45 80 163 86 2010 367 83 135 220 123 2011 457 80 143 278 186 2012 408 76 145 230 197 2013 508 113 182 331 287 2014 606 123 245 472 389 2015 586 142 274 505 422 2016 561 141 253 496 483 2017 728 176 290 732 578 2018 780 212 336 856 678 2019 726 177 272 754 709 2020 740 215 240 795 863 2021 983 261 324 1,008 1,328 2022 700 217 287 753 1,149 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only active, passive, ETFs or mutual funds, or only institutional or retail share class flows and assets. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level flow and allocation files or by reaching out to EPFRs Quant Team for customized aggregations. 4.1.2 Daily Percentage Flow To begin calculating the daily percentage flow, we start with our subset of active cross-border equity funds with a geographic mandate confined to a country or region of interest. First, we calculate a funds weighting to each sector within this region of interest, as the product of its stated sector and country allocation. \\[\\text{Fund Weight}_{i,s,r,m} = \\text{Sector Allocation}_{i,s,m} \\times \\text{Country Allocation}_{i,r,m}\\] Where: \\(\\text{Fund Weight}\\) = weighting to sector \\(s\\), within country or region \\(r\\), across all funds in our universe \\(i\\), for month \\(m\\) Then, to calculate a funds dollar flow into a sector within the country or region of interest, we scale the funds flow by the funds weighting, on that day. We apply the same procedure to all funds with flow and allocation information and then sum across all funds, to get the total dollar flow for each sector. EPFR releases sector and country allocations of all funds on the \\(23^{\\text{rd}}\\) of each month (or the next available business day) at a monthly frequency. Hence, our calculation assumes constant country and sector weightings between two consecutive release dates within the month. \\[\\text{Total Flow}_{s,r,t} = \\sum^{N}_{i=m}{\\text{Flow}_{i,s,r,t} \\times \\text{Fund Weight}_{i,s,r,m}}\\] Where: \\(\\text{Total Flow}\\) = the total dollar flow into a sector \\(s\\), for country or region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) We will want to normalize this figure. So, we repeat the process across the same funds Assets held under Management (AuM), to get the total AuM held in a sector. \\[\\text{Total AuM}_{s,r,t} = \\sum^{N}_{i=m}{\\text{AuM}_{i,s,r,t} \\times \\text{Fund Weight}_{i,s,r,m}}\\] Where: \\(\\text{Total AuM}\\) = the total assets held in a sector \\(s\\), for country or region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) Finally, to find the daily percentage flow for a sector, we divide the total flow by the total AuM held in a country or region. \\[\\text{Percentage Flow}_{s,r,t} = 100 \\times \\frac{\\text{Total Flow}_{s,r,t}}{\\text{Total AuM}_{s,r,t}}\\] Where: \\(\\text{Percentage Flow}\\) = the scaled flow as a percentage into a sector \\(s\\), for country or region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) We repeat this across all different sectors, and countries or regions, for the entire history. 4.1.3 Aggregate Flow File Users may create flow percentages for their desired country or region, sector aggregations and granularity using the methodology described in the previous section. Users also have the option to use the Flow-Percentage Sector Strategy files EPFR provides, which are updated daily at 5:00 PM EST with a T+1 day lag, and are available in the users EPFR FTP connection under the Strategies folder. There are five different types of Flow-Percentage Sector Strategy files available for different countries or geographic, regions which include: Emerging Markets (EM), Japan (JP), United Kingdom (UK), Eurozone, and the United States (US). Each of these files contain aggregate percentage flow data for 12 sectors (displayed below). For this demonstration, we will focus on the US so we will be using the file FloPctSector-US-daily.csv, which can be downloaded from the users FTP under the folder Strategies/daily and can be stored in the users local folder EPFR/daily. Below shows a snippet of what this file contains: Strategies/daily/FloPctSector-US-daily.csv CDisc CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst FinsExREst 20221201 -0.0544133 -0.1501373 -0.1391800 -0.0946229 -0.0443176 -0.0878050 -0.0405456 -0.2197664 0.0158905 -0.0108059 -0.1356850 -0.0815507 20221202 -0.0045566 0.0244751 0.0422289 0.0117102 0.0265640 0.0162280 0.0055618 0.0174281 0.0139732 0.0444272 -0.0020316 0.0160702 20221205 0.0848306 0.1446208 0.1196249 0.0999533 0.0509726 0.1128825 0.0669086 0.0627982 0.0332417 0.0309872 0.0835426 0.1051566 20221206 -0.0256779 -0.0091260 0.0133871 -0.0175412 -0.0031798 -0.0144732 -0.0177890 0.0015587 -0.0039850 -0.0906554 -0.0280658 -0.0141986 20221207 -0.0230160 -0.0134151 -0.0053965 -0.0217519 -0.0130111 -0.0120639 -0.0000646 -0.0782963 -0.0163454 -0.0075162 0.0156094 -0.0336547 20221208 -0.0417034 -0.1278279 0.0053458 -0.0505404 -0.0401745 -0.1007443 -0.0593709 -0.2507193 -0.0462828 -0.0075478 -0.0143200 -0.0621246 For convenience, save the path to the flow file you choose to use as flow.file. Example shown below: flow.file &lt;- &quot;C:\\\\EPFR\\\\daily\\\\FloPctSector-US-daily.csv&quot; 4.1.4 Return File The return file for this strategy should contain the daily passive equity returns for each of the sectors in the flow file, over the period of time and within the country or region the user wants to backtest. The user can choose to use return data found with their own resources, or they have the option to use a file EPFR provides of Sector Returns, which is available in the users EPFR FTP connection under the Returns folder (more information available in Returns Information). The return file that EPFR provides contains Fund Return data and can be used as a proxy to equity market returns. The user can recreate these files using EPFRs daily flow data with the following equation: \\[\\text{Fund Return}_{s,r,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,s,r,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,s,r,t}}\\] Where: \\(\\text{Fund Return}\\) = the percentage return of sector \\(s\\), for country or region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) For this demonstration, we will focus on the US so we will be using the file PsuedoReturns-Sector-US-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what this file contains: Returns/daily/PsuedoReturns-Sector-US-daily.csv CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst 20221201 -0.2431 -0.6401 -0.2838 0.2003 0.0493 0.2252 -0.1012 0.4482 -0.2080 -0.2548 20221202 0.0121 0.0213 -0.0034 0.0365 0.0929 -0.0941 0.0453 0.0024 -0.0109 -0.0171 20221205 -1.6356 -3.2600 -2.4229 -0.6162 -0.8405 -1.9255 -1.0314 -1.3607 -0.9563 -1.8007 20221206 -1.1871 -3.1151 -1.2726 -1.4503 -1.4473 -2.9407 -0.7542 -2.8517 0.3810 -1.1524 20221207 0.0738 -0.3759 -0.0744 0.4393 -0.1259 -0.3715 -0.1486 -0.2057 -0.1489 0.1621 20221208 0.7013 -0.8788 -0.0780 1.3499 0.4440 1.8668 0.4028 -0.5269 0.2874 0.7512 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Sector-US-daily.csv&quot; "],["strategy-implementation-3.html", "4.2 Strategy Implementation", " 4.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the flow and return files to our R studio workspace. x &lt;- mat.read(flow.file) # GET FLOW PERCENTAGE C:\\\\EPFR\\\\daily\\\\FloPctSector-US-daily.csv y &lt;- mat.read(ret.file) # GET RETURN C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Sector-US-daily.csv Next, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(x\\) to use the same sectors, in the same order as \\(y\\). x &lt;- as.matrix(x[, dimnames(y)[[2]]]) # LINE UP INDICATORS WITH RETURNS * Note: subsetting can also be done when creating the flow and return files 4.2.1 Compounding Flows Next, we set up a variable for our lookback period, which can also be called a flow window. This variable will be the window of time we use to create a trailing compounded daily percentage flow. The lookback period we choose for our demonstrations is 20 days. lookback &lt;- 20 # FLOW WINDOW (IN WEEKDAYS) - 20 day look back period Again, using a function from the library('EPFR.r'), compound.flows() compounds our daily percentage flow over the trailing lookback period for each sector. x &lt;- compound.flows(x, lookback, F) # COMPOUND FLOWS CDisc CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst FinsExREst 20221201 -0.1509415 -0.2250062 0.6044772 -0.2808077 -0.0057585 -0.0289950 -0.1753918 -0.4577443 0.0143092 0.2198572 -1.1441277 0.0042669 20221202 -0.1478096 -0.1767291 0.3400230 -0.2732577 0.0510085 -0.0166465 -0.0866750 -0.3542438 0.0273871 0.2411600 -1.1013972 -0.0002700 20221205 -0.0422361 -0.0162768 0.4322582 -0.1392681 0.1139422 0.0972506 0.0000681 -0.3065147 0.0722724 0.2812595 -0.8822782 0.1048242 20221206 -0.0722140 -0.0336643 0.3658648 -0.1823607 0.0953741 0.0720908 -0.0102382 -0.3810076 0.0533155 0.1301528 -0.9054895 0.0549232 20221207 -0.1002727 -0.0618456 0.2749281 -0.2065582 0.1028432 0.0443100 -0.0173922 -0.4651538 0.0227681 0.0917185 -0.7905249 -0.0152572 20221208 -0.1393354 -0.1889118 0.2466263 -0.2722208 0.0550748 -0.0550250 -0.0694212 -0.7207375 -0.0138364 0.0941653 -0.8540915 -0.0811986 4.2.2 Total Return Index We will now convert our percentage returns data \\(y\\) to total index returns indexed so that time moves forward. To do this we will use the function ret.to.idx() from library('EPFR.r'). We will also use the functions map.rname() to ensure the row names of the matrices line up with our flow file and ret.idx.gaps.fix() to replace any NA values. Please refer to the library documentation for the complete list of parameters for these functions (tip: ?ret.to.idx(),?ret.idx.gaps.fix() ). y[is.na(y)] &lt;- 0 y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) 4.2.3 Ranking Sectors Next, we sort each of the sectors in our country or region into five equal bins based on their compounded percentage flow values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our daily percentage flow data compounded over a desired period and the total return index data. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+1 day lag and is released around 5:00 pm EST, we account for a T+2 day delay in our model. Users interested in more timely signals can also use the T+2 open prices for backtesting purposes. Alternatively, EPFRs Premium Daily offering collects an earlier release of end-of-day data which includes a significant subset of its original fund-level flow information. delay &lt;- 2 # DELAY IN KNOWING DATA (IN WEEKDAYS) - data takes time to have It is also important to note that this model will need to be re-balanced weekly. The day of the week the rebalancing occurs is at the users discretion. For this example we will set the day of the week to trade as Friday. doW &lt;- 5 # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input return the horizons that they are interested in here. For this example, we define a return horizon for weekly, fortnightly, monthly, bi-monthly, quarterly, and semi-annual rebalancing. hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS) - holding periods Now that we have defined all of our inputs, to rank the sectors into quintiles by their 20-day percentage flow, we call the function bbk() for a one-week holding period. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay) 4.2.4 Model Go long the top basket and short the bottom basket. 20-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst 20221230 4 1 2 3 2 5 5 3 1 4 20221223 4 1 3 2 2 5 5 3 1 4 20221216 4 1 3 2 2 4 5 3 1 5 20221209 4 1 3 1 2 4 5 3 2 5 20221202 4 1 2 3 2 4 5 3 1 5 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 20221230 -1.8566050 1.0887642 0.3708237 0.0497519 0.3472651 -2.2038701 2.2246404 20221223 -0.0418929 0.3402011 0.4276992 -0.3162858 -0.4097217 0.3678288 -0.1898268 20221216 2.1395331 0.2277807 0.0070763 -1.9778575 -0.3965326 2.5360658 0.2637821 20221209 1.9191695 0.7071599 -0.9190817 -0.9616110 -0.7456367 2.6648062 -1.5945934 20221202 -1.6735452 0.0697746 0.3735787 0.1790699 1.0511220 -2.7246672 -3.5737229 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 4.2.5 Performance Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Weekly AnnMn 7.7 -2.3 -1.9 -0.3 -3.3 11.0 7.8 AnnSd 10.7 7.9 7.6 8.3 9.7 16.8 20.2 Sharpe 72.1 -28.7 -25.2 -3.2 -33.5 65.1 38.7 HitRate 7.1 -2.6 -0.2 -0.3 -4.6 6.0 7.1 Beta 0.0 0.0 0.0 0.0 0.0 0.0 1.0 Alpha 7.5 -2.3 -1.8 0.0 -3.4 10.8 0.0 DrawDn -21.1 -55.7 -54.1 -33.6 -83.8 -33.7 -76.6 DDnBeg 20220610 20081107 20081024 20070622 20100702 20220610 20071012 DDnN 34 743 718 77 557 34 73 AnnTo 1114 2248 2549 2308 1178 2292 0 Fortnightly AnnMn 6.3 -2.2 -0.6 -0.5 -3.0 9.3 7.5 AnnSd 10.7 7.7 7.6 7.8 8.8 16.1 19.3 Sharpe 58.5 -28.7 -9.1 -6.0 -33.1 56.9 39.2 HitRate 4.9 -0.5 0.0 -0.5 -4.2 6.8 10.0 Beta 0.0 0.0 0.0 0.0 0.0 0.0 1.0 Alpha 6.0 -1.9 -0.8 -0.2 -3.1 9.1 0.0 DrawDn -20.2 -55.7 -30.4 -30.1 -83.1 -36.4 -72.9 DDnBeg 20215418 20081062 20135464 20070723 20100418 20210308 20071008 DDnN 19 341 51 196 306 35 36 AnnTo 847 1460 1605 1453 872 1720 0 Monthly AnnMn 5.6 -1.5 -0.9 -1.1 -2.2 7.8 7.5 AnnSd 10.2 7.3 7.3 8.1 8.5 15.1 19.1 Sharpe 55.4 -20.2 -12.2 -14.1 -26.0 52.3 39.4 HitRate 9.2 -1.8 -0.6 -2.6 -4.4 7.5 12.5 Beta 0.0 0.0 0.0 0.0 0.0 0.0 1.0 Alpha 5.5 -1.2 -0.9 -0.8 -2.5 8.0 0.0 DrawDn -19.8 -42.2 -39.3 -41.3 -74.1 -33.4 -68.4 DDnBeg 20198012 20127988 20073296 20070838 20097993 20178008 20070911 DDnN 15 110 136 150 153 17 20 AnnTo 626 881 894 909 646 1272 0 Bi-Monthly AnnMn 3.7 -0.5 0.7 -1.5 -2.4 6.1 7.1 AnnSd 10.1 7.5 7.1 7.5 8.7 15.2 18.1 Sharpe 36.6 -7.7 9.9 -21.2 -29.4 40.5 39.8 HitRate 8.6 2.0 5.6 -3.3 -6.0 7.5 16.3 Beta 0.0 -0.1 0.0 0.0 0.1 0.0 1.0 Alpha 3.4 0.1 0.7 -1.2 -3.0 6.3 0.0 DrawDn -20.7 -32.7 -26.3 -41.6 -75.9 -30.1 -60.9 DDnBeg 20113939 20112865 20117285 20085108 20102873 20081688 20070870 DDnN 16 29 37 60 62 7 9 AnnTo 312 415 414 410 322 634 0 Quarterly AnnMn 3.5 -0.5 0.7 -1.8 -1.9 5.5 7.1 AnnSd 9.3 7.7 7.3 7.4 8.5 13.9 17.4 Sharpe 38.9 -5.8 9.4 -24.6 -25.0 39.5 41.3 HitRate 7.0 2.5 5.1 -5.0 -6.3 8.2 17.9 Beta 0.0 0.0 0.0 -0.1 0.1 0.0 1.0 Alpha 3.3 -0.2 0.7 -1.4 -2.3 5.6 0.0 DrawDn -21.2 -35.1 -25.9 -39.1 -69.5 -38.4 -56.8 DDnBeg 20146599 20109802 20112855 20093701 20102121 20123790 20071638 DDnN 8 16 15 42 44 5 6 AnnTo 232 294 293 288 238 470 0 Semi-Annual AnnMn 3.0 -0.5 0.5 -0.9 -2.2 5.2 7.2 AnnSd 8.8 7.2 7.2 7.7 9.1 14.2 18.1 Sharpe 35.2 -5.8 8.6 -12.3 -26.5 38.2 40.4 HitRate 8.7 -1.4 5.8 -2.9 -9.6 11.6 19.9 Beta 0.0 0.0 0.0 -0.1 0.1 0.0 1.0 Alpha 2.7 -0.3 0.5 -0.3 -2.6 5.4 0.0 DrawDn -23.0 -32.9 -25.2 -34.6 -61.5 -37.0 -48.7 DDnBeg 20128651 20117665 20127621 20112646 20105746 20112554 20071216 DDnN 8 13 10 14 22 5 3 AnnTo 126 148 145 152 128 254 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2007 4.622228 8.728068 -4.9439937 -21.2120912 12.805789 -8.183561 -1.011691 31 2008 14.375725 -1.322843 1.7095187 -19.3877873 4.625387 9.750339 -46.504989 52 2009 14.868090 -5.668578 -21.4480016 16.1556139 -3.907124 18.775214 34.566948 52 2010 8.717687 -6.689767 -6.5033783 3.2858599 1.189599 7.528088 17.243632 53 2011 9.678729 3.674624 -3.3859450 -2.0050766 -7.962332 17.641062 2.173219 52 2012 3.429355 1.986293 4.3574638 2.1383469 -11.911459 15.340814 13.683315 52 2013 4.606888 3.821385 -0.2403924 3.0689767 -11.256858 15.863746 24.404870 52 2014 5.386686 -3.721557 6.3174943 0.6926633 -8.675287 14.061974 13.174733 52 2015 6.751300 -8.115439 -2.8562334 11.3308423 -7.110470 13.861770 -4.508516 52 2016 -2.437210 -3.924251 4.9285130 -1.3246662 2.757614 -5.194824 11.252761 53 2017 0.166657 3.931922 1.4284693 -0.7176119 -4.809437 4.976094 11.534889 52 2018 11.614465 -3.887556 2.1236343 -4.7626868 -5.087857 16.702321 -9.608623 52 2019 2.921743 3.774146 5.6689766 -0.1542883 -12.210578 15.132321 23.680192 52 2020 38.702682 -3.998738 -23.9888203 -2.4511768 -8.263947 46.966629 13.106947 52 2021 -8.569646 -11.670276 0.0534208 8.9491152 11.237386 -19.807031 23.475278 53 2022 16.420679 -6.881379 4.9606529 -9.6867452 -4.813208 21.233887 -12.678979 52 "],["activepassive-country-strategy.html", "5 Active/Passive Country Strategy", " 5 Active/Passive Country Strategy The Active/Passive Country Strategy is an equity-based rotation strategy that ranks different countries across a customized universe of developed and emerging markets. This approach uses the stated monthly allocations of equity funds with a cross-border mandate and EPFRs fund classification to create an indicator. "],["data-4.html", "5.1 Data", " 5.1 Data The Active/Passive Country Strategy developed by EPFR uses the ratio of average allocation of active over passive funds. This section aims to give the reader an understanding of the methodology for constructing the variables used in the strategy. 5.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy uses the following portions of the EPFR dataset; Equity fund-level country weightings, using the EPFR Country Allocation database. Active/Passive tagging at the fund level, using EPFRs fund classifications. Active and passive equity funds which report their country allocations to EPFR have grown substantially over time. The figure below shows EPFRs coverage over time of active versus passive funds used to create this signal. AUM ($BB) of Equity funds reporting country allocations Active Passive Total 2002 138 2 140 2003 128 3 131 2004 170 9 179 2005 267 18 286 2006 406 63 469 2007 521 106 627 2008 438 104 542 2009 366 86 452 2010 429 103 532 2011 534 130 663 2012 454 121 576 2013 609 372 981 2014 777 539 1,317 2015 780 678 1,458 2016 700 769 1,470 2017 879 1,119 1,998 2018 998 1,324 2,322 2019 1,181 1,417 2,599 2020 1,070 1,488 2,558 2021 1,459 2,121 3,581 2022 1,024 1,971 2,995 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only ETFs or mutual funds, geographic mandate, and fund domicile. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level allocation files or reaching out to EPFRs Quant Team for customized aggregations. 5.1.2 Active/Passive Indicator To begin calculating the active/passive indicator, we start with our subset of active and passive cross-border equity funds. Then for each country, we compute equally-weighted average allocations. These averages are computed separately across active and passive funds, as shown below. \\[\\overline{\\text{Active Allocation}}_{c,m} = \\frac{\\sum^{N}_{i=m}{\\text{Country Allocation}_{i,c,m}}}{N}\\] Where: \\(\\overline{\\text{Active Allocation}}\\) = the equally-weighted average allocations to a country \\(c\\), across all Active funds in our universe \\(i\\), for month \\(m\\) \\[\\overline{\\text{Passive Allocation}}_{c,m} = \\frac{\\sum^{N}_{i=m}{\\text{Country Allocation}_{i,c,m}}}{N}\\] Where: \\(\\overline{\\text{Passive Allocation}}\\) = the equally-weighted average allocations to a country \\(c\\), across all Passive funds in our universe \\(i\\), for month \\(m\\) Finally, to get our active/passive indicator for a country, we express the average allocation of active funds as percentage of that over passive funds. \\[\\text{Active/Passive Indicatior}_{c,m} = 100 \\times \\frac{\\overline{\\text{Active Allocation}}_{c,m}}{\\overline{\\text{Passive Allocation}_{c,m}}}\\] Where: \\(\\text{Active/Passive Indicatior}\\) = the ratio of average active over passive allocations to a country \\(c\\) and month \\(t\\) We repeat this across all different countries for the entire history. 5.1.3 Aggregate Indicator File Users may create the active/passive indicator for their desired country aggregations using the methodology described in the previous section. Users also have the option to use the Active/Passive Country Strategy file EPFR provides, which is updated monthly at 5:00 PM EST with a T+23 day lag, and is available in the users EPFR FTP connection under the Strategies folder. The Active/Passive Country Strategy file contains aggregate active/passive indicator data for 55 countries in the ACWI, EAFE and Emerging Market country universes. For this demonstration, we will be using the file ActPasCtry-monthly.csv, which can be downloaded from the users FTP under the folder Strategies/monthly and can be stored in the users local folder EPFR/monthly. Below shows a snippet of what this file contains: Strategies/monthly/ActPasCtry-monthly.csv AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US JO MA PK AE QA VE SA KW 202201 -0.4116589 0.3215365 -0.4395098 0.2033904 0.6814724 0.4359012 -0.4390273 0.4637412 0.4790104 -0.7655074 0.0506318 0.8326907 0.5432593 -0.3565337 -0.0885959 0.2369512 -0.2751302 5.015702 -0.1436980 -0.4264640 0.2227321 2.269794 1.759860 -0.3421111 -0.3968119 -0.1757148 1.1429755 0.4494854 -0.1866656 -0.1539115 -0.0712242 0.0931108 -0.4833248 0.0320463 -0.4019757 -0.0861903 -0.1956867 1.5642416 0.8871501 -0.2181529 -0.1235379 0.1192964 -0.4029589 0.1356841 0.0619282 -0.3309885 0.3617819 1.336750 -0.2530996 -0.2681152 NA -0.3396732 -0.5408369 202202 -0.3903412 0.3025222 -0.4225272 0.2086961 0.8346743 0.4481174 -0.4344863 0.4338277 0.4957880 -0.7170507 0.1166151 0.2536770 0.6315095 -0.2658749 -0.0945730 0.2137518 -0.2825992 4.950402 -0.0976879 -0.4403187 0.2610183 2.137616 1.957246 -0.2530923 -0.4229628 -0.0924395 1.1403516 0.7415435 -0.1708561 -0.1436105 -0.0530148 0.0119293 -0.5128763 0.0592285 -0.3967172 -0.1061223 -0.1857912 1.6285870 0.9143402 -0.2320151 -0.1179328 0.1480624 -0.3816681 0.2046359 0.0566413 -0.3410773 0.3278588 3.415418 -0.3185905 -0.4135812 NA -0.3550474 -0.6430551 202203 -0.3688560 0.2805165 -0.4101576 0.2130056 0.9772176 0.4236433 -0.4208925 0.4320335 0.4824436 -0.7213895 0.0990333 2.0298302 0.7424796 -0.2424444 -0.1239329 0.1876749 -0.2388349 3.783801 -0.2466231 -0.4549257 -0.1252377 1.595001 1.325004 -0.2543773 -0.2641990 -0.1344421 1.3196491 0.2755998 -0.1513770 -0.1460110 -0.0560442 -0.0339794 -0.5163832 0.0114068 -0.4324152 -0.1140916 -0.2140291 1.3045336 0.9964926 -0.2666780 -0.1303510 0.1535921 -0.3935603 0.2816546 0.0743059 -0.3084517 0.2464617 2.497610 -0.2623263 -0.3940539 NA -0.4000018 -0.6861364 202204 -0.3687968 0.3185151 -0.4228410 0.1550255 0.7892834 0.3386751 -0.4307848 0.3677196 0.5230830 -0.7305293 -0.1046205 -0.2413952 0.6288219 -0.2760861 -0.2448614 0.1259917 -0.2605456 4.307477 -0.2994163 -0.3512995 0.0845009 1.215186 2.770224 -0.2637296 -0.3177815 -0.1463344 0.8749594 0.6741988 -0.1256812 -0.1496520 -0.0667768 0.0192244 -0.4876611 0.0354283 -0.4200972 -0.0827129 -0.1956528 1.1511023 1.0684993 -0.2438731 -0.0809011 0.0970967 -0.3569473 0.2033025 0.0830815 -0.4963108 -0.0593894 2.127893 -0.1883872 -0.3809750 NA -0.3812137 -0.7135296 202205 -0.3249846 0.3724780 -0.4114695 0.1905780 0.8704149 0.4266375 -0.4054981 0.3958469 0.5815749 -0.6398179 -0.0349082 -0.2690386 0.8008241 -0.1764559 -0.2346205 0.1914458 -0.2733041 2.754161 -0.2627486 -0.3475267 0.0143530 1.225950 2.988442 -0.1929273 -0.3614982 -0.1143957 0.8995259 0.6297235 -0.1119129 -0.1712639 -0.0724077 -0.0228316 -0.5338787 0.0560249 -0.4237451 -0.1154279 -0.2119235 0.8590158 0.9323932 -0.2412536 -0.1130822 0.1693429 -0.3634012 0.2639463 0.0492678 -0.3985578 -0.0424219 1.870296 -0.1153921 -0.3414538 NA -0.3858441 -0.7030830 202206 -0.3155353 0.3446796 -0.3982346 0.2677924 0.8230942 0.4334032 -0.4136115 0.3311540 0.5725105 -0.6247500 -0.0960704 -0.1732658 0.7694420 -0.1765785 -0.3187803 0.1387018 -0.2167914 3.801217 -0.3088773 -0.3191568 -0.0639615 1.132402 2.504805 -0.1836117 -0.3493510 -0.0881084 0.8910945 0.5377157 -0.1594006 -0.1762541 -0.0893935 -0.1267178 -0.5137351 0.0860649 -0.4322122 -0.1106705 -0.2105706 0.9199082 0.9540571 -0.2610024 -0.1213421 0.2150883 -0.3659797 0.2774824 0.0490680 -0.3892771 0.0136632 1.366859 -0.0071518 -0.3459011 NA -0.3127394 -0.6181641 For convenience, save the path to the active/passive indicator file you choose to use as indicator.file. Example shown below: indicator.file &lt;- &quot;C:\\\\EPFR\\\\monthly\\\\ActPasCtry-monthly.csv&quot; 5.1.4 Return File The return file for this strategy should contain monthly passive equity ETF returns for each of the countries in the aggregate indicator file, over the period of time the user wants to backtest. The user can choose to use return data found with their own resources, or they have the option to use a file EPFR provides of ETF Country Returns, which is available in the users EPFR FTP connection under the Returns folder (more information available in Returns Information). The return file that EPFR provides contains Fund Return data and can be used as a proxy to equity market returns. The user can recreate these files using EPFRs daily flow data with the following equation: \\[\\text{Fund Return}_{c,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,c,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,c,t}}\\] Where: \\(\\text{Fund Return}\\) = the percentage return of country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) However, since this signal is limited to monthly granularity, it is important to ensure that returns are also indexed by month. If the users return file is indexed daily or weekly, the function mat.daily.to.monthly(, T) from library('EPFR.r') should be used when implementing the strategy. For this demonstration, we will be using the file PsuedoReturns-Country-ETF-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what this file contains: Returns/daily/PsuedoReturns-Country-ETF-daily.csv AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA 202201 NA 0.973288 1.594462 0.721983 -1.040899 1.961128 1.001474 0.183599 1.475952 -0.366419 1.593265 2.045048 NA 0.591932 1.577889 0.627262 1.843685 3.597642 1.377244 0.373134 0.672721 0.931811 -0.028029 4.223976 NA 0.600713 1.608620 1.452223 1.713156 1.138853 0.237582 0.440324 0.854906 2.788030 1.604763 0.613942 1.038684 1.651220 1.438685 1.281007 1.812263 1.657264 0.086309 NA 2.092986 NA 0.580811 -0.744660 0.136978 0.734779 202202 NA 0.182113 0.014783 0.416247 -0.094755 -0.003842 0.418073 0.764757 1.650140 0.922147 1.559230 -46.019314 NA -0.327717 1.038502 0.216502 2.125181 -1.054379 1.495421 0.586551 -2.011041 0.828879 5.963952 1.909268 NA 1.325298 -0.022470 -0.826146 -0.852734 0.128872 -0.322077 -3.576741 -1.697044 2.334923 -1.311457 -1.597290 -0.697487 -4.404241 0.296405 -1.724568 -0.158158 2.521658 -0.209912 NA -0.113051 NA 0.916556 2.360021 2.010872 1.551618 202203 NA 0.071897 -0.908407 0.579772 -0.335717 -0.067537 -0.914519 0.460916 1.256393 0.186215 0.869384 0.032630 NA -0.417681 0.076819 -0.460366 -0.244657 0.032465 0.756969 2.129047 0.642939 -0.547137 -1.763254 -1.177646 NA -1.894339 -0.401140 -2.589791 -1.665078 -0.806791 -0.793096 -1.480329 -1.244692 -1.096372 -0.960619 -1.339336 -1.485924 -0.807996 -1.417892 -1.627780 -1.534142 0.088995 -1.571247 NA -1.484202 NA 0.623718 0.719788 -0.211767 -0.195446 202204 NA -1.541044 -1.593062 1.422457 -0.273129 -1.761420 0.215833 1.329540 -2.150028 0.126980 -2.328931 0.052179 NA -0.095365 -0.912833 -0.213889 0.211383 -2.826396 -0.175111 -3.381722 0.000000 -0.111242 3.324691 -2.222141 NA 0.484269 0.068209 -1.071967 0.738303 0.450629 0.294224 -0.049707 0.030536 1.639640 0.112571 0.195111 0.298014 -0.071251 -0.875882 0.609969 0.181146 -0.282852 0.087847 NA -3.445825 NA 0.000000 -0.142623 -0.035102 -0.460521 202205 NA -0.305397 -0.500174 1.964952 2.110841 0.525171 -0.487210 0.904827 -0.770603 1.566863 -0.322944 -0.312938 NA 0.864324 2.443169 1.437357 0.442004 -0.892265 -1.059192 4.172838 -0.717241 -1.099910 0.224026 -0.237217 NA 1.232678 -1.569897 0.292242 -1.341100 -1.086531 -0.042435 -0.842522 -1.303960 -0.288684 -1.806816 -1.351950 -1.114083 0.184820 -0.458887 -1.271046 0.476686 0.088109 -0.878720 NA -0.785360 NA 1.215882 2.312961 0.393958 1.360315 202206 NA -1.492936 -1.001419 -0.682016 -0.769543 -0.176466 -1.190865 -2.255140 -1.025601 -0.663440 -1.780365 -3.007181 NA -1.455299 -0.747612 -2.566657 -2.251371 -2.192744 -0.464337 -1.934374 -2.252519 -0.553796 -1.435090 -1.643945 NA -2.411276 -2.335358 -2.019114 -1.870610 -0.563988 -1.878609 -2.068821 -0.940736 -0.896080 -2.042964 -1.784398 -1.688862 -1.894195 -0.719822 -2.581643 -1.360115 -1.697039 -0.762954 NA -0.852413 NA 0.924146 -0.765203 -0.131060 -1.915281 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Country-ETF-daily.csv&quot; "],["strategy-implementation-4.html", "5.2 Strategy Implementation", " 5.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the aggregate indicator and return files to our R studio workspace. x &lt;- as.matrix(mat.read(indicator.file)) # GET ACTIVE/PASSIVE INDICATOR C:\\\\EPFR\\\\monthly\\\\ActPasCtry-monthly.csv y &lt;- mat.read(ret.file) # GET TOTAL RETURN INDEX C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Country-ETF-daily.csv Before the data is ready, we will first need to apply the mat.daily.to.monthly() function to ensure that return data is correctly indexed by month, as mentioned previously (help: ?mat.daily.to.monthly()). y &lt;- mat.daily.to.monthly(y, T) One of our first options is choosing the universe we want to use. EPFR has tested this signal within three different universes of countries: ACWI (All Country World Index), EAFE (Europe, Australasia, and the Far East), and EM (Emerging Markets). For this example, we choose ACWI, which includes 52 countries. idx &lt;- &quot;ACWI&quot; Depending on what universe \\(idx\\) the user chooses to test, the indicator file \\(x\\) and return file \\(y\\) must both be subset to the correct countries. Running the code below, which calls from functions contained inlibrary('EPFR'), helps identify every member that was included the selected universe during the period over which we are backtesting. x &lt;- x[, is.element(dimnames(x)[[2]], Ctry.msci.members.rng(idx, dimnames(x)[[1]][1], dimnames(x)[[1]][dim(x)[1]]))] # SUBSET TO INDEX COUNTRIES A few other adjustments must also be applied to our monthly Active/Passive signal data to ensure that it aligns with returns. First, the internally-generated fund returns are only available with sufficient coverage from the end of 2015 onwards. Second, fund returns for country ISO codes JO and VE are unavailable. startdate &lt;- &quot;20150512&quot; x &lt;- x[rownames(x)&gt;=startdate, ] # SUBSET TIME PERIOD ctry &lt;- c(&#39;JO&#39;, &#39;VE&#39;) x &lt;- x[, !(dimnames(x)[[2]] %in% ctry)] Next, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(y\\) to use the same countries, in the same order as \\(x\\). y &lt;- y[, dimnames(x)[[2]]] # TOTAL RETURN INDEX * Note: subsetting can also be done when creating the indicator and return files 5.2.1 Moving Sum of Indicator Next, we set up a variable for our lookback period. This variable will be the window of time across which we smooth the signal for each country. The lookback period we choose for our demonstrations is 12 months. lookback &lt;- 12 # LOOKBACK (IN MONTHS) Now, using the function from the library('EPFR.r'), called compound.flows() we compute the moving sum of our signal over the trailing lookback period for each country. x &lt;- compound.flows(x, lookback, T) # COMPUTE MOVING SUM AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA 202201 -5.117164 4.678409 -5.655730 2.567462 4.723583 5.463615 -5.396886 5.092788 5.806146 -8.940355 0.2127890 11.291808 6.580787 -4.331993 4.598560 1.717442 -2.337778 37.33551 -1.852158 -4.854193 4.747390 31.76519 28.36629 -2.172202 -4.960506 -0.2916124 13.09126 7.164393 -1.817267 -1.976079 -1.1403057 2.2294622 -5.361904 0.1641512 -4.941868 -1.144588 -2.466260 21.57215 9.252658 -2.382309 -1.250053 1.183348 -4.141872 1.628550 0.5623372 2.442255 36.00374 -2.001183 -4.747304 -4.489196 202202 -5.072419 4.637230 -5.621818 2.574939 5.331131 5.494082 -5.388036 5.121049 5.941346 -8.932020 0.4178712 10.642956 6.848616 -4.216254 4.004105 1.822039 -2.401967 39.95124 -1.770836 -4.858818 4.345430 30.62884 27.65854 -2.324806 -4.962109 -0.5969357 13.16735 7.116680 -1.931579 -1.983764 -1.0847287 1.6754867 -5.465089 0.2845010 -4.910503 -1.164140 -2.437013 21.85479 9.576143 -2.471491 -1.279265 1.084992 -4.192530 1.717976 0.5468860 2.468647 36.43622 -2.196695 -4.636670 -4.465992 202203 -5.015681 4.643543 -5.574692 2.597466 6.155813 5.484428 -5.358121 5.147998 6.013065 -8.930333 0.5304089 11.705001 7.138094 -4.124273 3.461151 1.894532 -2.465178 41.44260 -1.847794 -4.892082 3.413912 29.36388 26.38921 -2.492902 -4.796030 -0.8192064 13.35556 6.587172 -1.989177 -1.978598 -1.0278146 1.3565412 -5.542525 0.2927595 -4.913480 -1.203407 -2.435036 21.01725 10.011778 -2.557305 -1.358146 1.102749 -4.263043 1.870577 0.5366788 2.639549 35.90684 -2.383396 -4.548398 -4.496952 202204 -4.947918 4.535185 -5.495884 2.520172 6.801915 5.411781 -5.328401 5.101505 6.032498 -8.918860 0.4628795 10.434452 7.345398 -4.049834 2.570905 1.894301 -2.578488 43.34312 -2.056172 -4.943089 2.905736 27.74858 26.86343 -2.622450 -4.680218 -1.0788292 12.86845 6.647043 -1.984618 -1.980360 -0.9948773 1.1127796 -5.603665 0.3202932 -4.919820 -1.221229 -2.429764 19.64961 10.381683 -2.613288 -1.398923 1.051464 -4.309179 1.910272 0.6001556 2.517206 34.76934 -2.499323 -4.464717 -4.523993 202205 -4.820733 4.507865 -5.434879 2.465613 7.397669 5.387254 -5.277615 5.057851 6.143054 -8.821450 0.3577807 9.211567 7.630802 -3.913319 1.788540 1.904205 -2.730111 43.94098 -2.188964 -4.991435 2.297136 26.12656 27.10910 -2.688053 -4.603027 -1.2426424 12.76230 6.535463 -1.951538 -1.976833 -0.9690803 0.8319998 -5.711483 0.3444544 -4.914463 -1.230629 -2.437072 18.39921 10.585603 -2.657278 -1.443286 1.065102 -4.333185 2.030077 0.6219051 2.330161 33.43916 -2.482779 -4.381071 -4.558491 202206 -4.671999 4.474621 -5.356142 2.505159 7.969634 5.359422 -5.231112 4.989937 6.264760 -8.704054 0.1956019 8.055630 7.883029 -3.736385 1.005881 1.885444 -2.846336 45.64295 -2.337513 -4.882090 1.794952 24.42459 26.72583 -2.756549 -4.485215 -1.3480140 12.58793 6.386792 -1.964803 -1.980810 -0.9705799 0.5179211 -5.774074 0.3909402 -4.924925 -1.248182 -2.444340 17.20674 10.804709 -2.718384 -1.487150 1.255855 -4.375402 2.150373 0.6290547 2.121053 31.55198 -2.326925 -4.316165 -4.519375 5.2.2 Total Return Index We will now convert our percentage returns data \\(y\\) to total index returns indexed so that time moves forward. To do this, we will use the function ret.to.idx() from library('EPFR.r'). We will also use the functions map.rname() to ensure the row names of the matrices line up with our flow file and ret.idx.gaps.fix() to replace any NA values. Please refer to the library documentation for the complete list of parameters for these functions (tip: ?ret.to.idx(),?ret.idx.gaps.fix() ). y[is.na(y)] &lt;- 0 y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) 5.2.3 Ranking Countries Next, we sort each of the countries in our universe into five equal bins based on the last 12-month active/passive indicator values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our 12-month active/passive indicator, the total return index data, and our selected universe. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+23 day lag and is released around 5:00 pm EST, we account for a T+1 month delay in our model. delay &lt;- 1 # DELAY IN KNOWING DATA (IN MONTHS) The day of the week the rebalancing occurs is at the users discretion, but for this example we will set the day of the week to trade as N/A.This allows the bbk() function to default to monthly-indexed returns, and avoids trading on a specific weekday on each rebalancing date. doW &lt;- NULL # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input the return horizons that they are interested in here. For this example, we define a return horizon for monthly, quarterly, semi-annual, and annual rebalancing, but is it important to note that this model can be re-balanced as desired. hz &lt;- c(1, 3, 6, 12) # RETURN HORIZON (IN MONTHS) Now that we have defined all of our inputs, to rank the countries into quintiles by their 12-month active/passive indicator, we call the function bbk() for a one-month holding period. By adding the selected backtesting universe as an input to the function, we can ensure that the model tracks additions and removals of countries over time, and is therefore able to identify all members on a point-in-time basis. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx) 5.2.4 Model 12-month cumulative indicator ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] AU BR CA CN ID IN JP KR MX MY PH RU SG TH TR TW ZA AR CL CO CZ EG HU IL NZ NO PE PL SE CH GB AT BE DK FI FR DE GR IE IT NL PT ES HK US MA PK AE QA SA 202210 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 3 2 4 NA 4 5 NA 1 1 4 NA 3 1 1 3 4 3 3 5 2 5 3 4 1 1 4 3 2 5 NA 2 NA NA 3 4 5 202209 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 3 2 4 NA 4 5 2 1 1 4 NA 3 1 1 3 4 3 3 5 2 5 3 4 1 1 4 3 2 5 NA 2 NA NA 4 4 5 202208 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 3 2 4 NA 4 5 2 1 1 4 NA 3 1 1 3 4 3 3 5 2 5 3 4 1 1 4 3 2 5 NA 2 NA NA 4 4 5 202207 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 2 2 4 NA 4 5 2 1 1 4 NA 3 1 1 3 4 3 3 5 3 5 3 4 1 1 4 3 2 5 NA 2 NA NA 4 4 5 202206 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 2 2 4 NA 4 5 2 1 1 4 NA 3 1 1 3 4 3 2 5 3 5 3 4 1 1 4 3 2 4 NA 3 NA NA 4 5 5 202205 NA 2 5 2 1 2 5 2 1 5 3 NA NA 4 2 2 4 NA 4 5 2 1 1 4 NA 3 1 1 4 3 3 2 5 3 5 3 4 1 1 4 3 2 4 NA 3 NA NA 4 5 5 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 202210 0.1123069 0.5675860 -0.2833644 0.0805593 -0.4416673 0.5539742 1.2956635 202209 -0.0535121 0.1320834 -0.0766896 0.0116607 -0.0315104 -0.0220016 0.1737691 202208 -0.2578973 0.0816368 0.2255144 0.1625414 -0.2423176 -0.0155797 0.3692333 202207 0.1518092 0.4501508 -0.0677247 -0.2478474 -0.3116759 0.4634851 -0.6708180 202206 0.2348840 -0.2209259 0.6335878 0.0079502 -0.6288742 0.8637582 0.8609815 202205 0.0731573 -0.1315785 -0.0236833 -0.0810249 0.1897048 -0.1165475 -1.4172222 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 5.2.5 Performance Go long the top basket and short the bottom basket. Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay, idx)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Monthly AnnMn 0.0 0.1 0.6 -0.6 -0.4 0.4 -1.1 AnnSd 2.0 1.3 1.0 1.2 0.9 2.6 2.3 Sharpe 1.9 8.7 64.6 -48.4 -41.0 15.4 -49.1 HitRate 9.0 2.6 6.4 -5.1 -7.7 12.8 -10.8 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -5.0 -2.8 -1.6 -6.4 -2.9 -6.4 -12.6 DDnBeg 202201 201908 202104 201708 201606 202201 201908 DDnN 4 20 8 49 54 5 34 AnnTo 100 122 128 125 88 188 0 Quarterly AnnMn 0.1 0.1 0.8 -0.6 -0.4 0.5 -1.3 AnnSd 2.1 1.3 1.0 1.2 0.8 2.6 2.1 Sharpe 4.4 10.2 76.1 -51.7 -52.5 20.0 -62.0 HitRate 7.8 3.8 17.1 -9.2 -11.9 23.6 -8.5 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -4.7 -2.6 -1.1 -5.9 -2.9 -5.8 -12.1 DDnBeg 202141 201941 202037 201709 201607 202141 201909 DDnN 2 6 3 16 17 2 12 AnnTo 53 67 66 67 44 97 0 Semi-Annual AnnMn 0.2 0.2 0.8 -0.7 -0.5 0.7 -1.4 AnnSd 2.0 1.2 1.1 1.2 0.9 2.5 2.4 Sharpe 9.0 18.2 72.5 -55.0 -57.8 28.1 -59.1 HitRate 14.3 2.0 25.4 -9.0 -17.0 19.9 -5.4 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -3.7 -2.2 -0.8 -5.6 -3.5 -4.6 -11.4 DDnBeg 202125 201924 201971 201710 201608 202124 201908 DDnN 1 4 1 8 10 1 6 AnnTo 44 53 53 53 37 81 0 Annually AnnMn 0.2 0.2 0.9 -0.7 -0.6 0.8 -1.5 AnnSd 1.8 1.0 0.9 1.2 0.7 2.3 2.8 Sharpe 10.5 25.1 133.6 -60.9 -89.6 36.4 -53.1 HitRate 9.2 10.6 35.0 -22.5 -26.4 21.4 -16.7 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -2.8 -1.5 -0.3 -4.8 -3.7 -2.9 -10.3 DDnBeg 202073 201923 202032 201706 201648 202082 201906 DDnN 1 2 1 4 4 1 3 AnnTo 36 42 42 43 34 69 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, idx)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2016 2.1497038 -2.5308110 0.4748235 1.5663512 -1.6600675 3.8097712 2.7987124 6 2017 -0.2341407 -0.5141391 1.0100145 0.0211845 -0.3508848 0.1167441 -0.2333194 12 2018 -1.3200053 1.0673208 1.7160041 -1.6324097 0.0590898 -1.3790952 0.5324834 12 2019 0.8827821 1.1057671 -0.8251248 0.2358405 -1.3968076 2.2795897 1.1121428 12 2020 2.2526071 -0.9550321 2.6511485 -3.6345453 -0.3897737 2.6423808 -4.5537195 12 2021 2.0878495 -1.1754099 -1.1770929 -0.7226859 0.8168224 1.2710271 -5.5778726 12 2022 -4.4959010 2.4780509 0.5792737 1.3232944 -0.2859988 -4.2099022 -0.2665563 12 "],["activepassive-sector-strategy.html", "6 Active/Passive Sector Strategy", " 6 Active/Passive Sector Strategy The Active/Passive Sector Strategy is an equity-based rotation strategy that ranks different sectors across a customized universe of geographic regions. This approach uses the stated monthly sector allocations of equity funds and EPFRs fund classification to create an indicator. "],["data-5.html", "6.1 Data", " 6.1 Data The Active/Passive Sector Strategy developed by EPFR uses the ratio of average allocation of active over passive funds. This section aims to give the reader an understanding of the methodology for constructing the variables used in the strategy. 6.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy uses the following portions of the EPFR dataset: Equity fund-level sector weightings, using the EPFR Sector Allocation database. Funds with a geographic mandate confined to the country or region of interest (e.g. for the US sector, we look only at funds that have a mandate to invest in the United States). Active/Passive tagging at the fund level, using EPFRs fund classifications. Active and passive equity funds which report their sector allocations to EPFR have grown substantially over time. The figure below shows EPFRs coverage over time of funds used to create this signal for different countries and regions. AUM ($BB) of Equity funds reporting sector allocations, by region Emerging Markets Japan United Kingdom Eurozone United States 2006 113 0 1 24 0 2007 141 0 5 42 0 2008 128 0 4 25 0 2009 175 11 32 23 26 2010 256 11 34 23 28 2011 307 15 53 54 111 2012 249 12 50 52 129 2013 316 59 81 103 1,158 2014 438 113 103 177 1,546 2015 408 185 105 220 1,788 2016 416 186 91 182 2,332 2017 584 260 105 257 3,134 2018 687 317 156 276 3,878 2019 746 364 127 241 4,624 2020 738 406 103 219 5,165 2021 967 603 144 283 7,178 2022 770 504 123 190 6,559 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only ETFs or mutual funds, geographic mandate, and fund domicile. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level allocation files or reaching out to EPFRs Quant Team for customized aggregations. 6.1.2 Active/Passive Indicator To begin calculating the active/passive indicator, we start with our subset of active and passive equity funds with a geographic mandate confined to the country or region of interest. Then, for each sector, we compute equally-weighted average allocations, within our country or region. These equal-weight averages are computed separately across active and passive funds, as shown below. \\[\\overline{\\text{Active Allocation}}_{s,r,m} = \\frac{\\sum^{N}_{i=n}{\\text{Sector Allocation}_{i,s,r,m}}}{N}\\] Where: \\(\\overline{\\text{Active Allocation}}\\) = the equally-weighted average allocations to a sector \\(s\\), within country or region \\(r\\), across all Active funds \\(i\\), for month \\(t\\) \\[\\overline{\\text{Passive Allocation}}_{s,r,m} = \\frac{\\sum^{N}_{i=n}{\\text{Sector Allocation}_{i,s,r,m}}}{N}\\] Where: \\(\\overline{\\text{Passive Allocation}}\\) = the equally-weighted average allocations to a sector \\(s\\), within country or region \\(r\\), across all Passive funds \\(i\\), for month \\(m\\) Finally, to get our active/passive indicator for a sector within our country or region, we express the average allocation of active funds as percentage of that over passive funds. \\[\\text{Active/Passive Indicatior}_{s,r,m} = 100 \\times \\frac{\\overline{\\text{Active Allocation}}_{s,r,m}}{\\overline{\\text{Passive Allocation}_{s,r,m}}}\\] Where: \\(\\text{Active/Passive Indicatior}\\) = the ratio of average active over passive allocations to a sector \\(s\\), within country or region \\(r\\), across all Passive funds \\(i\\), for month \\(m\\) We repeat this across all different sectors and countries or regions for the entire history. 6.1.3 Aggregate Indicator File Users may create the active/passive indicator for their desired sector and country aggregations using the methodology described in the previous section. Users also have the option to use the Active/Passive Sector Strategy files EPFR provides, which are updated monthly at 5:00 PM EST with a T+23 day lag, and are available in the users EPFR FTP connection under the Strategies folder. There are five different types of Active/Passive Sector Strategy files available for different countries or geographic regions which include: Emerging Markets (EM), Japan (JP), United Kingdom (UK), Eurozone, and the United States (US). Each of these files contain aggregate active/passive indicator data for 12 sectors (displayed below). For this demonstration, we will focus on the US so we will be using the file ActPasSector-US-monthly.csv, which can be downloaded from the users FTP under the folder Strategies/monthly and can be stored in the users local folder EPFR/monthly. Below shows a snippet of what this file contains: Strategies/monthly/ActPasSector-US-monthly.csv CDisc CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst FinsExREst 202201 -0.0433309 -0.2569239 -0.0847072 -0.0257469 0.0903608 0.0596510 -0.0019699 -0.0933515 1.0445337 -0.4266538 -0.6044792 0.1126693 202202 -0.0409194 -0.2444632 -0.1180361 -0.0344230 0.1048389 0.0656965 0.0052952 -0.1229965 0.9884343 -0.4413073 -0.6168956 0.1026448 202203 -0.0321449 -0.2341893 -0.0948149 -0.0500640 0.1074406 0.0747911 0.0012635 -0.1240600 0.9621974 -0.4181823 -0.5910677 0.0834273 202204 -0.0299786 -0.2415415 -0.1160230 -0.0595987 0.1177913 0.0611670 0.0134044 -0.1411849 0.9257296 -0.4332796 -0.5914524 0.0828742 202205 -0.0220213 -0.2374495 -0.1246013 -0.0375359 0.1032653 0.0726302 0.0091783 -0.0900981 0.7769177 -0.4187418 -0.5691501 0.0965970 202206 -0.0332674 -0.2413157 -0.1121087 -0.0483676 0.1201985 0.0606431 0.0013251 -0.0841842 0.7326374 -0.4030974 -0.5752789 0.0890789 For convenience, save the path to the active/passive indicator file you choose to use as indicator.file. Example shown below: indicator.file &lt;- &quot;C:\\\\EPFR\\\\monthly\\\\ActPasSector-US-monthly.csv&quot; 6.1.4 Return File The return file for this strategy should contain monthly passive equity returns for each of the sectors in the aggregate indicator file, over the period of time and within the country or region the user wants to backtest. The user can choose to use return data found with their own resources, or they have the option to use a file EPFR provides of Sector Returns, which is available in the users EPFR FTP connection under the Returns folder (more information available in Returns Information). The return file that EPFR provides contains Fund Return data and can be used as a proxy to equity market returns. The user can recreate these files using EPFRs daily flow data with the following equation: \\[\\text{Fund Return}_{s,r,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,s,r,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,s,r,t}}\\] Where: \\(\\text{Fund Return}\\) = the percentage return of sector \\(s\\), for country or region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) However, since this signal is limited to monthly granularity, it is important to ensure that returns are also indexed by month. If the users return file is indexed daily or weekly, the function mat.daily.to.monthly(, T) from library('EPFR.r') should be used when implementing the strategy. For this demonstration, we will focus on the US so we will be using the file PsuedoReturns-Sector-US-daily.csv, which can be downloaded from the users FTP under the folder Returns/daily and can be stored in the users local folder EPFR/returns. Below shows a snippet of what this file contains: Returns/daily/PsuedoReturns-Sector-US-daily.csv CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst 202201 2.4614 0.8773 1.0816 1.7560 1.4368 3.9725 1.4354 2.4248 1.8801 1.4120 202202 -0.2091 3.1671 -0.9604 -0.5535 1.1053 0.1163 -0.4423 -0.1498 0.5049 -1.5710 202203 -1.4729 -1.3324 -1.7606 -1.0156 -1.5969 -1.8327 -1.0746 -1.8588 -0.2614 -1.2084 202204 -3.6917 -2.5322 -2.7660 -2.4791 -2.7227 -4.4142 -2.2345 -3.3863 -2.9428 -4.6633 202205 -0.2772 -1.5009 -0.3149 -1.6843 -0.8919 -0.9466 -1.8780 -0.1713 -1.3320 -1.1871 202206 -0.7274 -2.0990 -0.7200 -0.4972 0.5389 -1.5574 -1.4392 -1.1923 1.0359 -0.2166 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Sector-US-daily.csv&quot; "],["strategy-implementation-5.html", "6.2 Strategy Implementation", " 6.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the aggregate indicator and return files to our R studio workspace. x &lt;- mat.read(indicator.file) # GET ACTIVE/PASSIVE INDICATOR C:\\\\EPFR\\\\monthly\\\\ActPasSector-US-monthly.csv y &lt;- mat.read(ret.file) # GET TOTAL RETURN INDEX C:\\\\EPFR\\\\returns\\\\PsuedoReturns-Sector-US-daily.csv Before the data is ready, we will first need to apply the mat.daily.to.monthly() function to ensure that the return data is correctly indexed by month, as mentioned previously (help: ?mat.daily.to.monthly()). y &lt;- mat.daily.to.monthly(y, T) Now, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(x\\) to use the same sectors, in the same order as \\(y\\). x &lt;- as.matrix(x[, dimnames(y)[[2]]]) # LINE UP INDICATORS WITH RETURNS * Note: subsetting can also be done when creating the indicator and return files 6.2.1 Moving Sum of Indicator Next, we set up a variable for our lookback period. This variable will be the window of time across which we smooth the signal for each country. The lookback period we choose for our demonstrations is 12 months. lookback &lt;- 12 # LOOKBACK (IN MONTHS) Now, using the function from the library('EPFR.r'), called compound.flows() we compute the moving sum of our signal over the trailing lookback period for each sector. x &lt;- compound.flows(x, lookback, T) # COMPUTE MOVING SUM CDisc CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst FinsExREst 202201 -0.7156276 -3.125668 -0.9110936 -0.1612643 0.7458485 0.4150336 -0.0528877 -0.8602142 13.83616 -5.061333 -7.300732 1.477671 202202 -0.6835107 -3.150278 -0.8738219 -0.1801454 0.7784470 0.4498826 -0.0339342 -0.9024594 13.76228 -5.126640 -7.300896 1.465128 202203 -0.6527746 -3.131600 -0.8590385 -0.2299449 0.8278040 0.4885882 -0.0236669 -0.9417546 13.69471 -5.135598 -7.278306 1.414010 202204 -0.6246197 -3.117799 -0.8779855 -0.2713483 0.8958192 0.5136460 -0.0101432 -1.0076511 13.46132 -5.139532 -7.247421 1.379699 202205 -0.5895009 -3.091071 -0.9465558 -0.2888459 0.9546409 0.5523154 -0.0025015 -1.0194861 13.05166 -5.119721 -7.202301 1.368803 202206 -0.5606572 -3.059903 -1.0011090 -0.3213590 1.0281215 0.5902327 -0.0017198 -1.0372759 12.56834 -5.085358 -7.162568 1.340906 6.2.2 Total Return Index We will now convert our percentage returns data \\(y\\) to total index returns indexed so that time moves forward. To do this, we will use the function ret.to.idx() from library('EPFR.r'). We also use the functions map.rname() to ensure the row names of the matrices line up with our flow file and ret.idx.gaps.fix() to replace any NA values. Please refer to the library documentation for the complete list of parameters for these functions (tip: ?ret.to.idx(),?ret.idx.gaps.fix() ). y[is.na(y)] &lt;- 0 y &lt;- ret.to.idx(map.rname(y, dimnames(x)[[1]])) # CONVERT TO A TOTAL-RETURN INDEX y &lt;- ret.idx.gaps.fix(y) 6.2.3 Ranking Sectors Next, we sort each of the sectors in our country or region into five equal bins based on the last 12-month active/passive indicator values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our 12-month active/passive indicator and the total return index data. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+23 day lag and is released around 5:00 pm EST, we account for a T+1 month delay in our model. delay &lt;- 1 # DELAY IN KNOWING DATA (IN MONTHS) The day of the week the rebalancing occurs is at the users discretion, but for this example we will set the day of the week to trade as N/A.This allows the bbk() function to default to monthly-indexed returns, and avoids trading on a specific weekday on each rebalancing date. doW &lt;- NULL # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input return the horizons that they are interested in here. For this example we define a return horizon for monthly, quarterly, semi-annual, and annual rebalancing, but is it important to note that this model can be re-balanced as desired. hz &lt;- c(1, 3, 6, 12) # RETURN HORIZON (IN MONTHS) Now that we have defined all of our inputs, to rank the sectors into quintiles by their 12-month active/passive indicator, we call the function bbk() for a one-month holding period. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay) 6.2.4 Model 12-month cumulative indicator ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] CStpls Engy Fins HCare Indls Tech Matls Telco Utes REst 202210 4 4 1 2 2 3 3 1 5 5 202209 4 4 1 2 2 3 3 1 5 5 202208 4 4 1 2 2 3 3 1 5 5 202207 4 3 1 2 2 3 4 1 5 5 202206 4 3 1 2 2 3 4 1 5 5 202205 4 3 1 2 2 3 4 1 5 5 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 202210 0.35854 -0.28226 1.26739 -1.06981 -0.27386 0.63240 2.65916 202209 -0.49311 0.20504 -0.48991 0.70189 0.07609 -0.56920 -0.54724 202208 -0.01306 -0.15416 -0.19726 -0.19001 0.55449 -0.56755 -0.93719 202207 0.35149 0.04659 -0.15981 -0.34411 0.10584 0.24565 -0.65964 202206 -0.53526 -0.53911 1.35414 0.27024 -0.55001 0.01475 1.24731 202205 -0.26872 0.70828 -1.14077 -0.39587 1.09708 -1.36580 -0.68743 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 6.2.5 Performance Go long the top basket and short the bottom basket. Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, 5, NULL, T, 0, delay)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Monthly AnnMn -0.6 0.0 0.1 -0.5 0.8 -1.3 -1.2 AnnSd 1.3 1.7 1.8 1.7 2.0 2.7 3.5 Sharpe -42.9 -1.6 7.9 -31.4 37.2 -49.5 -34.5 HitRate -3.3 3.3 -1.9 -9.3 7.8 -5.6 -3.7 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -9.5 -5.7 -6.1 -7.4 -5.0 -20.9 -19.5 DDnBeg 201109 201108 201712 201110 202001 201108 201304 DDnN 84 102 54 74 6 101 114 AnnTo 48 93 137 84 48 97 0 Quarterly AnnMn -0.6 0.2 0.1 -0.7 0.8 -1.4 -1.3 AnnSd 1.3 1.4 1.6 1.8 1.7 2.3 3.3 Sharpe -44.8 11.6 7.6 -37.2 46.5 -60.4 -40.5 HitRate -11.7 -1.1 2.6 -12.4 12.4 -16.2 -10.5 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -9.7 -3.8 -5.4 -8.1 -4.2 -21.3 -18.5 DDnBeg 201139 201374 201743 201109 201941 201139 201303 DDnN 28 17 15 35 2 32 38 AnnTo 39 75 90 55 25 64 0 Semi-Annual AnnMn -0.7 0.3 0.1 -0.9 0.9 -1.6 -1.3 AnnSd 1.4 1.2 1.7 1.9 1.9 2.5 3.2 Sharpe -49.6 23.0 5.1 -44.5 50.2 -65.5 -40.3 HitRate -16.1 8.5 -2.3 -17.0 19.3 -21.5 -11.0 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -9.8 -2.4 -4.1 -10.4 -3.7 -22.2 -17.7 DDnBeg 201125 201591 201642 201160 201925 201141 201288 DDnN 14 7 4 19 2 16 19 AnnTo 37 69 69 48 24 62 0 Annually AnnMn -0.6 0.3 0.3 -0.9 0.9 -1.5 -1.2 AnnSd 1.4 1.5 1.7 1.6 1.7 2.5 3.4 Sharpe -45.6 22.6 13.7 -57.0 56.7 -62.1 -34.5 HitRate -16.1 0.5 -2.3 -12.0 30.6 -33.1 -9.0 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -8.2 -2.3 -2.9 -10.7 -2.8 -19.4 -15.1 DDnBeg 201165 201523 201606 201340 201932 201165 201540 DDnN 7 3 2 8 2 8 7 AnnTo 31 54 44 40 24 56 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], 5, NULL, T, 0, delay)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2011 0.145290 -2.1044100 -4.1895600 -1.2326100 3.2720400 -3.1267500 -0.0439680 4 2012 -1.761824 -1.0441744 0.3205756 -0.1345244 0.4529256 -2.2147500 2.8641744 12 2013 0.265170 -0.3906300 0.7740700 0.0289200 1.5921200 -1.3269500 -2.5939700 12 2014 0.017780 -2.5638700 0.6685300 -0.7917700 1.9782300 -1.9604500 -1.0652300 12 2015 -2.436390 1.8485100 1.5665100 -2.1655400 0.6972600 -3.1336500 -3.2917600 12 2016 -1.551630 -1.2259300 2.6010700 -1.4587300 1.6352200 -3.1868500 3.4323300 12 2017 -2.160750 1.7262000 1.3389000 -1.8341000 0.9297500 -3.0905000 0.9771500 12 2018 -1.101278 0.8184722 -0.0793778 1.3711722 -1.0311778 -0.0701000 0.8323778 12 2019 -0.211450 -3.7046000 -1.4900000 1.3591000 4.0469500 -4.2584000 0.3149000 12 2020 1.622860 3.6087600 -2.3250400 0.2440100 -3.1505900 4.7734500 -5.5259600 12 2021 1.861784 1.0895844 -0.9942156 -2.3226156 0.3675344 1.4942500 -7.0861844 12 2022 -1.049869 0.2509309 0.6466036 0.2682764 -0.1159418 -0.9339273 -2.7203127 11 "],["flow-percentage-dm-rates-strategy.html", "7 Flow-Percentage DM Rates Strategy", " 7 Flow-Percentage DM Rates Strategy The Flow-Percentage DM Rates Strategy is a bond-based rotation strategy, which ranks G10 countries based on a percentage flow indicator, and invests in their respective 10-year rates. This approach uses the stated allocations of bond funds with a cross-border focus and calculates the percentage flow into G10 countries. G10 Countries used in this ianalysis are: 1. United States 2. Europe 3. United Kingdom 4. Japan 5. Australia 6. New Zealand 7. Canada 8. Switzerland 9. Norway 10. Sweden "],["data-6.html", "7.1 Data", " 7.1 Data The Flow-Percentage DM Rates Strategy developed by EPFR is based on the percentage flow into countries via cross-border bond funds. In this section, the reader will gain an understanding of the aggregations which can be used to create a signal as well as the methodology behind daily percentage flow calculations. 7.1.1 Aggregations The first step is defining a subset of data to capture in calculating our signal. This strategy requires: Bond funds with a cross-border focus. These are essentially any fund that has a mandate spanning more than one country. The vast majority of these will be global and regional funds. Funds must report both daily flows and country allocations, since these values are needed to calculate the daily percentage flow. Fixed-income cross-border funds, which report their country allocations and their daily flows, are a subset of those that only report their fund flows to EPFR. The figure below shows EPFRs coverage of this universe over time compared to our total monthly and daily coverages. AUM ($BB) of Fixed income funds All Funds Cross-border Monthly Flows Daily Flows Daily Flows Daily Flows &amp; Ctry Alloc 2007 3,220 1,611 309 29 2008 4,262 2,611 431 30 2009 5,643 3,812 471 30 2010 6,520 4,169 850 58 2011 7,455 4,803 1,344 107 2012 8,795 5,343 1,372 53 2013 9,801 6,467 1,787 82 2014 11,083 7,562 2,390 142 2015 11,632 8,080 2,515 155 2016 12,362 8,638 2,829 240 2017 13,758 9,701 3,384 294 2018 14,755 10,515 3,782 311 2019 16,288 11,494 3,893 507 * Updated at the end of July each year Users looking for more specific detail can customize this aggregation even further using EPFRs fund-level or share class-level granularity. Some good examples would be to consider only active, passive, ETFs or mutual funds, or only institutional or retail share class flows and assets. Users can leverage these tags to different degrees in creating aggregated signals to backtest. Further detail about this is available in the section EPFR Data &amp; Filters. This can be achieved using fund-level flow and allocation files or by reaching out to EPFRs Quant Team for customized aggregations. 7.1.2 Daily Percentage Flow To begin calculating the daily percentage flow, we start with our subset of cross-border bond funds. To calculate the dollar flow into a country, we scale a funds flow by multiplying it against its stated country allocation, on that day. We then apply the same procedure to all funds with fund flow and country allocation information and then sum the flows for each country across all funds, to get the total dollar flow into a country. EPFR releases country allocations of all funds on the \\(23^{\\text{rd}}\\) of each month (or the next available business day) at a monthly frequency. Hence, our calculation assumes constant country weightings between two consecutive release dates within the month. \\[\\text{Total Flow}_{c,t} = \\sum^{N}_{i=m}{\\text{Flow}_{i,c,t} \\times \\text{Country Allocation}_{i,c}}\\] Where: \\(\\text{Total Flow}\\) = the total dollar flow into a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) We will want to normalize this figure. So, we repeat the process across the same funds Assets held under Management (AuM), to get the total AuM held in a country. \\[\\text{Total AuM}_{c,t} = \\sum^{N}_{i=m}{\\text{AuM}_{i,c,t} \\times \\text{Country Allocation}_{i,c}}\\] Where: \\(\\text{Total AuM}\\) = the total assets held in a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) Finally, to find the daily percentage flow for a country, we divide the total flow by the total AuM held in a country. \\[\\text{Percentage Flow}_{c,t} = 100 \\times \\frac{\\text{Total Flow}_{c,t}}{\\text{Total AuM}_{c,t}}\\] Where: \\(\\text{Percentage Flow}\\) = the scaled flow as a percentage into a country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) We repeat this across all different countries for the entire history. 7.1.3 Aggregate Flow File Users may create flow percentages for their desired country aggregations and granularity using the methodology described in the previous section. Users also have the option to use the Flow-Percentage DM Strategy file EPFR provides, which is updated daily at 5:00 PM EST with a T+1 day lag, and is available in the users EPFR FTP connection under the Strategies folder. The Flow-Percentage DM Strategy file contains aggregate percentage flow data for 52 countries in the ACWI, EAFE and Emerging Market country universes. For this demonstration, we will be using the file FloPctCtry-B-daily.csv, which can be downloaded from the users FTP under the folder Strategies/daily and can be stored in the users local folder EPFR/daily. Below shows a snippet of what this file contains: Strategies/daily/FloPctCtry-B-daily.csv AU CA CH DE GB JP NO NZ SE US 20220201 -0.0950507 -0.0315327 -0.3727611 -0.1047609 -0.0969043 0.0081440 -0.0657132 -0.1475318 -0.0844231 -0.0759766 20220202 -0.0469661 -0.0249638 -0.2127343 0.0741945 -0.0554096 -0.0186634 -0.0711573 -0.0314773 -0.0065801 -0.0266499 20220203 -0.0082617 0.0043339 -0.0404950 -0.0704836 -0.0494751 0.0709754 -0.0488570 0.0036287 -0.0407186 -0.0568840 20220204 -0.1367533 -0.0449064 -0.3684561 -0.1533709 -0.1369094 0.0093309 -0.1679166 -0.1858445 -0.2541709 -0.1108859 20220207 -0.1280167 0.0041454 -0.2162555 -0.2249074 -0.1607073 -0.0305696 -0.1262835 -0.1076707 -0.1903250 -0.1399923 20220208 -0.1972474 -0.1002139 -0.2642751 -0.2797248 -0.1652405 -0.0904993 -0.2372150 -0.2663778 -0.2768842 -0.1358340 For convenience, save the path to the flow file you choose to use as flow.file. Example shown below: flow.file &lt;- &quot;C:\\\\EPFR\\\\daily\\\\FloPctCtry-B-daily.csv&quot; 7.1.4 Return File The return file for this strategy should contain data for the 10-year rates for each G10 country in the flow file, over the period of time the user wants to backtest. However, EPFR is not able to provide this data, so users must find this data though their own third-party resources. For the purpose of creating backtest results in this notebook, we have used an internal file containing historical daily 10-year rates, and stored locally in the folder EPFR/returns. Below shows a snippet of what this file contains: EPFR/returns/g10rates.csv Below shows a snippet of what the return file contains: AU CA CH DE GB JP NO NZ SE US 20220201 1.9025 1.790 0.079 0.034 1.300 0.180 1.987 2.595 0.406 1.789 20220202 1.9125 1.756 0.090 0.038 1.257 0.179 1.990 2.572 0.424 1.777 20220203 1.8675 1.799 0.176 0.139 1.368 0.176 2.077 2.520 0.521 1.832 20220204 1.9600 1.853 0.246 0.203 1.411 0.198 2.104 2.600 0.595 1.911 20220207 1.9950 1.836 0.266 0.225 1.408 0.197 2.121 2.600 0.656 1.917 20220208 2.1200 1.855 0.326 0.263 1.489 0.218 2.153 2.708 0.690 1.965 For convenience, save the path to the return file you choose to use as ret.file. Example shown below: ret.file &lt;- &quot;C:\\\\EPFR\\\\returns\\\\g10rates.csv&quot; "],["strategy-implementation-6.html", "7.2 Strategy Implementation", " 7.2 Strategy Implementation The final step is implementing this strategy to create a signal. Lets begin by reading in the flow and return files to our R studio workspace. x &lt;- mat.read(flow.file) # GET FLOW PERCENTAGE C:\\\\EPFR\\\\daily\\\\FloPctCtry-B-daily.csv y &lt;- mat.read(ret.file) # TOTAL RETURN INDEX C:\\\\EPFR\\\\returns\\\\g10rates.csv Next, we will need to ensure that the data structure in \\(x\\) and \\(y\\) are completely aligned, having the same column names in the same order. Below we will subset the columns of \\(x\\) to only use the G10 countries listed in y, and in the same date order as y \\(y\\). x &lt;- x[, is.element(dimnames(x)[[2]],dimnames(y)[[2]])] # SUBSET TO G10 COUNTRIES y &lt;- y[,dimnames(x)[[2]]] * Note: subsetting can also be done when creating the flow and return files 7.2.1 Compounding Flows Next, we set up a variable for our lookback period, which can also be called a flow window. This variable will be the window of time we use to create a trailing compounded daily percentage flow. The lookback period we choose for our demonstrations is 20 days. lookback &lt;- 20 # FLOW WINDOW (IN WEEKDAYS) - 20 day look back period Again, using a function from the library('EPFR.r'), compound.flows() compounds our daily percentage flow over the trailing lookback period for each country. x &lt;- compound.flows(x, lookback, F) # COMPOUND FLOWS AU CA CH DE GB JP NO NZ SE US 20220201 -0.0147356 0.0998440 -1.281829 -0.5176295 -0.4215695 0.8690703 -0.8346496 -1.086802 -0.6430788 -1.085531 20220202 -0.1436693 0.0422141 -1.566203 -0.4747096 -0.5748950 0.8112050 -0.9143912 -1.137833 -0.6976324 -1.079877 20220203 -0.1788996 0.0583401 -1.648158 -0.5788006 -0.6370636 0.7962985 -0.9826300 -1.174760 -0.7499326 -1.154433 20220204 -0.2867007 0.0322003 -1.957859 -0.6540758 -0.7560261 0.7889151 -1.1206663 -1.358382 -0.9953409 -1.232607 20220207 -0.4238226 0.0518056 -2.150644 -0.8875790 -0.8945644 0.7171231 -1.2435045 -1.439052 -1.2318519 -1.332639 20220208 -0.6638225 -0.1019379 -2.488187 -1.1557103 -1.0960234 0.5340066 -1.5090552 -1.721286 -1.6577818 -1.430017 7.2.2 Ranking Countries Next, we sort each of the countries in our universe into five equal bins based on their compounded percentage flow values for the selected holding period. To do this, we will use the function from library('EPFR.r'), called bbk(). This function will output a standardized backtest result. The bbk() function requires our daily percentage flow data compounded over a desired period and 10-year rates data for each G10 country. Please refer to the library documentation for the complete list of parameters of this function (tip: ?bbk()). The first parameter we add is the number of bins we want to use. For our case, we want to use 5 because our strategy is to go long the top fifth and short the bottom fifth. nBin &lt;- 5 # NUMBER OF BINS Since EPFR data is published with a T+1 day lag and is released around 5:00 pm EST, we account for a T+2 day delay in our model. Users interested in more timely signals can also use the T+2 open prices for backtesting purposes. Alternatively, EPFRs Premium Daily offering collects an earlier release of end-of-day data which includes a significant subset of its original fund-level flow information. delay &lt;- 2 # DELAY IN KNOWING DATA (IN WEEKDAYS) - data takes time to have It is also important to note that this model will need to be re-balanced weekly. The day of the week the rebalancing occurs is at the users discretion. For this example we will set the day of the week to trade as Friday. doW &lt;- 5 # DAY OF THE WEEK YOU WILL TRADE ON (5 = FRIDAYS) Additionally, we also evaluate the returns for different holding periods. The user can input the return horizons that they are interested in here. For this example, we define a return horizon for weekly, fortnightly, monthly, bi-monthly, quarterly, and semi-annual rebalancing. hz &lt;- c(5, 10, 20, 45, 65, 130) # RETURN HORIZON (IN WEEKDAYS) - holding periods Now that we have defined all of our inputs, to rank the countries into quintiles by their 20-day percentage flow, we call the function bbk() for a one-week holding period. z &lt;- bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, sprds = T) 7.2.3 Model 20-day flow percentage ranked into quintiles (computed only where forward returns are available) z[[&quot;bins&quot;]] AU CA CH DE GB JP NO NZ SE US 20220225 2 1 5 2 3 1 4 3 5 4 20220218 2 1 5 2 3 1 4 3 5 4 20220211 2 1 5 3 2 1 4 4 5 3 20220204 2 1 5 2 3 1 4 5 3 4 Quintile returns over the equal-weight universe z[[&quot;rets&quot;]] Q1 Q2 Q3 Q4 Q5 TxB uRet 20220225 0.03595 -0.0168 0.04595 -0.06605 0.00095 0.0350 -0.17545 20220218 -0.02070 -0.0177 0.00480 0.02080 0.01280 -0.0335 0.02970 20220211 0.04895 -0.0203 -0.01255 0.00545 -0.02155 0.0705 -0.04445 20220204 -0.07860 0.0764 0.00390 -0.04060 0.03890 -0.1175 0.09410 Def: TxB represents summary statistics for the long/short portfolio (top - bottom = Q1 - Q5 = overall portfolio returns) 7.2.4 Performance Performance over all holding periods fcn &lt;- function(retW) {as.matrix(bbk(x, y, 1, retW, nBin, doW, T, 0, delay, sprds = T)$summ)} # DEFINE SUMMARY FUNCTION sapply(split(hz, hz), fcn, simplify = &quot;array&quot;) # WRITE SUMMARIES Q1 Q2 Q3 Q4 Q5 TxB uRet Weekly AnnMn -0.1 0.0 -0.1 0.0 0.1 -0.2 -0.2 AnnSd 0.3 0.3 0.3 0.3 0.3 0.5 0.6 Sharpe -28.2 11.0 -32.1 -3.7 50.1 -50.1 -36.8 HitRate -1.0 0.1 -1.3 -0.3 6.4 -4.4 -4.2 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -2.0 -0.8 -2.0 -0.8 -1.0 -4.3 -4.6 DDnBeg 20090417 20090619 20070615 20120914 20081226 20090605 20070706 DDnN 631 539 409 480 26 616 671 AnnTo 1443 2580 2876 2543 1518 2961 0 Fortnightly AnnMn -0.1 0.1 0.0 -0.1 0.1 -0.2 -0.2 AnnSd 0.3 0.3 0.3 0.3 0.3 0.4 0.6 Sharpe -32.1 33.5 -14.6 -31.3 40.2 -45.0 -39.7 HitRate -3.6 2.4 0.3 -4.2 5.2 -5.4 -5.6 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -2.2 -0.7 -1.3 -1.3 -0.8 -4.2 -4.6 DDnBeg 20090372 20110822 20070612 20095664 20081216 20085623 20070660 DDnN 326 65 111 310 14 336 339 AnnTo 1055 1568 1692 1650 1119 2174 0 Monthly AnnMn -0.1 0.1 0.0 -0.1 0.1 -0.2 -0.2 AnnSd 0.3 0.3 0.3 0.2 0.3 0.4 0.6 Sharpe -27.6 24.3 -14.5 -28.6 41.7 -43.3 -39.4 HitRate -2.9 3.1 -2.7 -5.4 8.0 -5.3 -6.8 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -2.0 -0.7 -1.2 -1.4 -0.7 -3.7 -4.6 DDnBeg 20087969 20098065 20100566 20083141 20093212 20087889 20070643 DDnN 162 68 94 122 29 163 170 AnnTo 740 924 977 953 785 1525 0 Bi-Monthly AnnMn -0.1 0.0 0.0 0.0 0.1 -0.2 -0.2 AnnSd 0.3 0.3 0.3 0.2 0.3 0.4 0.6 Sharpe -27.5 5.7 4.6 -15.9 34.8 -39.9 -38.2 HitRate -5.9 -1.2 2.0 0.0 7.5 -7.1 -8.3 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -1.8 -0.9 -0.8 -1.0 -0.6 -2.9 -4.5 DDnBeg 20084295 20102888 20091694 20109616 20118674 20077514 20071773 DDnN 64 38 24 24 17 65 75 AnnTo 365 430 445 434 373 738 0 Quarterly AnnMn -0.1 0.0 0.0 0.0 0.1 -0.1 -0.2 AnnSd 0.2 0.2 0.3 0.2 0.2 0.4 0.6 Sharpe -23.3 -5.1 5.4 -8.7 36.3 -37.7 -38.0 HitRate -5.4 -2.1 2.0 -1.7 9.8 -6.4 -9.4 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -1.5 -1.1 -0.8 -0.9 -0.5 -2.5 -4.4 DDnBeg 20089039 20102884 20102184 20114652 20108193 20089901 20070707 DDnN 44 33 21 27 9 45 52 AnnTo 256 300 303 307 261 518 0 Semi-Annual AnnMn 0.0 0.0 0.0 0.0 0.1 -0.1 -0.2 AnnSd 0.2 0.2 0.2 0.2 0.2 0.4 0.6 Sharpe -13.8 -1.7 -2.5 -5.9 27.3 -25.9 -38.1 HitRate -4.0 -2.1 0.3 -2.8 8.5 -8.1 -9.7 Beta NA NA NA NA NA NA 1.0 Alpha NA NA NA NA NA NA 0.0 DrawDn -1.3 -0.9 -0.9 -0.8 -0.5 -2.2 -4.3 DDnBeg 20093350 20112889 20096066 20114543 20107167 20091428 20071216 DDnN 17 12 12 13 6 19 26 AnnTo 143 156 158 160 140 283 0 Annualized mean one-week returns bbk(x, y, 1, hz[1], nBin, doW, T, 0, delay, sprds = T)$annSumm # DISPLAY CALENDAR-YEAR RETURNS Q1 Q2 Q3 Q4 Q5 TxB uRet nPrds 2007 0.1625349 0.4996383 -0.3870513 -0.4919479 0.1499831 0.0125517 -0.4653037 29 2008 0.1918144 -0.0184856 -0.8614856 0.1409144 0.5613144 -0.3695000 -1.3718144 52 2009 0.1401778 0.1771778 0.0966778 0.2764278 -0.6690722 0.8092500 0.7055722 52 2010 -0.0416992 -0.0214388 0.1716480 0.0192782 -0.0763332 0.0346340 -0.2631876 53 2011 -0.1948700 -0.0022700 -0.5873700 0.2538300 0.4953800 -0.6902500 -1.3339800 52 2012 0.2783133 -0.3524867 -0.1900367 -0.0988867 0.3250633 -0.0467500 -0.2274133 52 2013 -0.2597867 0.0164133 0.1279633 -0.1336367 0.2443633 -0.5041500 0.8895367 52 2014 -0.1563333 0.3199667 -0.4349333 -0.0438833 0.2466667 -0.4030000 -1.0756667 52 2015 -0.0590556 0.0320944 0.1243944 -0.0875056 0.0142944 -0.0733500 -0.1212444 52 2016 -0.0901224 -0.0204621 0.2361040 -0.1838205 0.0197644 -0.1098868 -0.1517266 53 2017 -0.3763222 -0.1743222 0.1176778 0.1026778 0.3611778 -0.7375000 -0.0056778 52 2018 -0.5571722 0.0475778 0.1909778 0.2819278 0.1048278 -0.6620000 -0.0833278 52 2019 -0.1360744 -0.1326744 0.0849256 0.0133756 0.1702256 -0.3063000 -0.4894756 52 2020 0.1081800 0.0549800 -0.0210700 -0.4761200 0.3340300 -0.2258500 -0.4174300 52 2021 0.0498568 0.2390190 -0.3819395 0.0239549 0.0017813 0.0480755 0.5731621 53 2022 -1.1272040 0.2593760 0.7468760 0.1826760 -0.0617240 -1.0654800 2.6461240 10 "],["overview.html", "8 Overview", " 8 Overview Quantitative analysts at EPFR have created 13 different proof-of-concept stock factors that can be used in single stock rotation strategies, and have been backtested in universes such as S&amp;P 500, Russell 2000, MSCI EM. Data Location Users can create backtests for their desired universe of securities using the QuantitativeFactors .txt files EPFR provides, which are updated daily at 5:00 PM EST with a T+1 day lag, or monthly at 5:00 PM EST with a T+26 day lag, and are available in the users EPFR FTP connection under the Stock Flows folder Quantitative Factors. &#39;/StockFlows4.1/QuantitativeFactors/&#39; The user will find all aggregate history for each of the daily and monthly factors, as well as history broken down by Active, Passive, ETF and Mutual funds. Data Derivation EPFRs stock factors are derived from the following variables within EPFRs internal holdings and flow database: Holdings: \\(\\begin{align} \\omega &amp; \\equiv \\text{% weight held by a fund in a security} \\\\ \\Delta \\omega &amp; \\equiv \\text{change in weight from prior month} \\\\ \\omega^{+} &amp; \\equiv \\text{active weight versus peers} \\end{align}\\) EPFR releases stock allocations of all funds on the \\(26^{\\text{th}}\\) of each month (or the next available business day) at a monthly frequency. Hence, our calculation assumes constant security weightings between two consecutive release dates within the month. Flows: \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\alpha &amp; \\equiv \\text{dollar starting assets of a fund} \\\\ A &amp; \\equiv \\text{dollar ending assets of a fund} \\end{align}\\) Note: there are many possibly factors that can be derived from this data base and users looking to test a different hypothesis can work with the team of Quantitative analysts at EPFR to create other factors. "],["flow-momentum-1.html", "9 Flow Momentum", " 9 Flow Momentum Flow momentum shows where flows are moving. FloMo FloMo is calculated by the normalized the dollar flow over AuM. To calculate the dollar flow to a security, EPFR scales a funds flow by multiplying it against its stated stock allocation, on that day. The same procedure is applied to all funds with fund flow and stock allocation information, which are then summed for each security across all funds, to get the total dollar flow into a security. To normalize this figure EPFR repeats the process across the same funds Assets held under Management (AuM), to get the total AuM held in a security. The final step, to find the flow momentum for a security, the total flow is divided by the total AuM held in a security. This is repeated this across all securities for the entire history. \\[\\text{FlowMo} \\equiv \\frac{\\sum \\varphi \\times \\omega}{\\sum \\alpha \\times \\omega}\\] where: \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\omega &amp; \\equiv \\text{% weight held by a fund in a security} \\\\ \\alpha &amp; \\equiv \\text{dollar starting assets of a fund} \\end{align}\\) Example FloMo Below shows a snippet of what EPFRs FloMo Files contain: Location: '/StockFlows4.1/QuantitativeFactors/Daily/FloMo/Aggregate/FlowMomentum202011.txt' ReportDate HSecurityId SecurityName FloMo 1112 11/02/2020 12:00:00 AM 1002967 Microsoft Corporation COM 0.081192843801613 5264 11/02/2020 12:00:00 AM 410864 Apple Inc. COM 0.075320134299900 8679 11/02/2020 12:00:00 AM 90522 Amazon.com, Inc. COM 0.055117562719877 11412 11/02/2020 12:00:00 AM 1002408 Exxon Mobil Corporation COM 0.294078014369536 12226 11/02/2020 12:00:00 AM 623932 Netflix, Inc. COM 0.015998119230939 13276 11/02/2020 12:00:00 AM 6012656 Visa Inc COM CL A 0.192744375318591 Interpretation A positive value indicates money flowing to a security. Similarly a negative value indicates outflow from a security. "],["smart-money.html", "10 Smart Money", " 10 Smart Money Smart Money factors are known factors in literature, and simply an effect that tries to identify funds who are receiving additional flows. EPFR has a set of 6 daily Smart Money factors, which are based on active manager sentiment and fund activity. The idea behind the following Smart Money indicators is to mimic the actions of any funds receiving inflows, and do the opposite to those receiving outflows. The rationale is that investors follow, and invest in, funds that outperform. Thus, Smart funds receiving inflows will eventually increase their positions towards stocks that they already hold, subsequently creating additional flows into the stocks themselves. So the idea is that flows chase returns, and this will eventually create an inner loop between flows, returns, and price pressure; which is captured in 6 different ways. for more information on smart money effect please refer to academic literature resources FloTrend FloTrend is calculated by the net change in flow allocations \\[\\text{FloTrend} \\equiv \\frac{\\sum \\Delta \\omega \\times \\varphi}{\\sum | \\Delta \\omega \\times \\varphi|}\\] where: \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\Delta \\omega &amp; \\equiv \\text{change in weight from prior month} \\end{align}\\) Interpretation A positive value indicates a positive manager sentiment towards a stock, as their weightings have increased, as well as high investor sentiment and strong inflows to the same fund. The more positive the indicator, the larger the increase in allocation towards the stock, or the higher the inflow, or both. FloDiff \\[\\text{FloDiff} \\equiv \\frac{\\sum \\text{sgn}(\\Delta \\omega) \\times \\varphi}{\\sum |\\varphi|}\\] \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\Delta \\omega &amp; \\equiv \\text{change in weight from prior month} \\end{align}\\) Interpretation A positive value tells us that more flows have been directed towards funds increasing their allocations to the stock. Similarly, a negative value indicates that more flows have been driven towards funds decreasing their position towards the stock. This indicator places more emphasis on the fund in/outflows, by removing any magnitude associated with changes in allocations and simplifying them to a + or -1. FloDiff2 \\[\\text{FloDiff2} \\equiv \\frac{\\sum \\Delta \\omega \\times \\text{sgn}(\\varphi)}{\\sum |\\Delta \\omega|}\\] \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\Delta \\omega &amp; \\equiv \\text{change in weight from prior month} \\end{align}\\) Interpretation A positive value tells us that more flows have been directed towards funds increasing their allocations to the stock by larger amounts. Similarly, a negative value indicates that more flows have come out of funds increasing their allocations to the stock by larger amounts. Conversely to the FloDiff indicator, this one places more emphasis on the changes in allocations, by removing any magnitude associated with fund in/outflows and simplifying them to a + or -1. ActWtTrend \\[\\text{ActWtTrend} \\equiv \\frac{\\sum \\omega^{+} \\times \\varphi}{\\sum |\\omega^{+} \\times \\varphi|}\\] \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\omega^{+} &amp; \\equiv \\text{active weight versus peers} \\end{align}\\) Interpretation A positive value indicates a positive manager sentiment towards the stock, as their active weights are bullish, as well as high investor sentiment and strong inflows to the same fund. The more positive the indicator, the larger the active weight towards the stock, or the higher the inflow, or both. ActWtDiff \\[\\text{ActWtDiff} \\equiv \\frac{\\sum \\text{sgn}(\\omega^{+}) \\times \\varphi}{\\sum |\\varphi|}\\] \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\omega^{+} &amp; \\equiv \\text{active weight versus peers} \\end{align}\\) Interpretation A positive value tells us that more flows have been directed towards funds that are bullish towards the stock compared with its peers. Similarly, a negative value indicates that more flows have been driven towards funds that are bearish toward the stock compared with its peers. This indicator places more emphasis on the fund in/outflows, by removing any magnitude associated with active weights and simplifying them to a + or -1. ActWtDiff2 \\[\\text{ActWtDiff2} \\equiv \\frac{\\sum \\omega^{+} \\times \\text{sgn}(\\varphi)}{\\sum |\\omega^{+}|}\\] \\(\\begin{align} \\varphi &amp; \\equiv \\text{dollar flow into a fund} \\\\ \\omega^{+} &amp; \\equiv \\text{active weight versus peers} \\end{align}\\) Interpretation A positive value tells us that more flows have been directed towards funds that are more highly bullish towards the stock compared with its peers (i.e. the active weight is larger). Similarly, a negative value indicates that more flows have come out of funds that are more highly bullish towards the stock compared with its peers. Conversely to the ActWtDiff indicator, this one places more emphasis on active weights, by removing any magnitude associated with fund in/outflows and simplifying them to a + or -1. "],["manager-momentum.html", "11 Manager momentum", " 11 Manager momentum EPFR has a set of 3 monthly Manager Momentum indicators which aim to capture if there are any trends in changes of allocation, and identify stocks with a positive momentum. "],["allocmo.html", "11.1 AllocMo", " 11.1 AllocMo A measure of manager allocation changes towards the stock, in absolute $ terms of AuM, where the change in allocation over the month reflects price pressure from manager-directed trading. By using both start and end AuM in the equation, we neutralize the effect of underlying price changes. 11.1.1 Calculation \\[\\text{AllocMo} \\equiv \\frac{\\sum \\Delta \\omega \\times ( A + \\alpha)}{\\sum (\\omega - \\Delta \\omega/2) \\times ( A + \\alpha)}\\] 11.1.2 Interpretation A positive value tells us that allocations towards a given stock have increased. "],["alloctrend.html", "11.2 AllocTrend", " 11.2 AllocTrend A measure of manager allocation changes towards the stock, in scaled $ amounts, where the change in allocation over the month reflects price pressure from manager-directed trading. By using both start and end AuM in the equation, we neutralize the effect of underlying price changes. 11.2.1 Calculation \\[\\text{AllocTrend} \\equiv \\frac{\\sum \\Delta \\omega \\times ( A + \\alpha)}{\\sum |\\Delta \\omega \\times ( A + \\alpha)|}\\] 11.2.2 Interpretation A positive value tells us that allocations towards a given stock have increased. "],["allocdiff.html", "11.3 AllocDiff", " 11.3 AllocDiff Multiplies a funds start and end AuM by the direction of the latest month-on-month change in % allocations towards a given stock. By summing these AuM across all applicable funds, then dividing by the sum of all start and end AuM, we get a normalized metric. 11.3.1 Calculation \\[\\text{AllocDiff} \\equiv \\frac{\\sum sgn(\\Delta \\omega) \\times ( A + \\alpha)}{\\sum ( A + \\alpha)}\\] A positive value indicates an increase in the amount of AuM invested to the stock, and a negative value indicates a decrease in the AuM invested in the stock. 11.3.2 Interpretation The more positive the indicator, the larger the increase of AuM invested in the stock relative to other stocks with a less positive indicator. Similarly, a more negative indicator indicates a larger decrease in AuM invested in the stock relative to other stocks with a less negative indicator. "],["ownership-dispersion.html", "12 Ownership Dispersion", " 12 Ownership Dispersion EPFR has a set of 2 monthly Ownership Dispersion indicators that try to identify if there is any concentrated ownership of a stock. The idea behind the following Ownership Dispersion indicators is to identify whether stocks are held by a wider or smaller group of fund managers. By historically testing this factor literature suggests that a very concentrated ownership suggests it is a bad thing for a stocks sharpe ratio and overall rick outlook. Generally, it is better to pick stocks with a broad range of investors, as higher ownership dispersion has been associated with lower stock volatility. "],["herfindahl.html", "12.1 Herfindahl", " 12.1 Herfindahl Measures the % weight held in a stock by each individual fund, and the ending AuM of the fund. It represents a measurement of owner dispersion. 12.1.1 Calculation \\[\\text{Herfindahl}^{[1]} \\equiv 1- \\frac{\\sum (\\omega \\times A)^2}{(\\sum \\omega \\times A)^2}\\] ### Interpretation A small value indicates that a small number of funds hold the majority of the stock (i.e. less dispersed, more concentrated ownership). Conversely, a large value indicates that many funds hold smaller amounts of the stock. "],["fund-count.html", "12.2 Fund Count", " 12.2 Fund Count Counts the number of funds holding some positive weight of a stock. 12.2.1 Calculation \\[\\text{FundCt}^{[2]} \\equiv \\sum sgn(\\omega)\\] ### Interpretation The higher the fund count, the larger the number of funds invested in it for a given month-end. "],["refrences.html", "12.3 Refrences", " 12.3 Refrences [1] Barabanov , S. S. (2003). The relationship between institutional ownership, concentration of ownership, bid ask spread, and returns on NASDAQ stocks. [2] Chen, J., Hong, H., &amp; Stein, J. C. (2002). Breadth of ownership and stock returns. Journal of financial Economics, 66(2 3), 171 205. "],["conviction.html", "13 Conviction", " 13 Conviction The idea behind the following Conviction indicator is to identify fund managers with larger positions than average, and use the assumption that this may signal some type of private information which we want to exploit. For example if a stock is being held by 100 managers but only 2 of them have a very significant positions in that stock, this may indicate some level of exclusive knowledge which is what we want to identify. "],["allocskew.html", "13.1 AllocSkew", " 13.1 AllocSkew Multiplies a funds AuM by the direction of the difference between the average allocations of a peer group of funds and the funds latest allocations towards the same stock. If this difference is positive, the fund is underweight vs peers, and if the difference is negative, the fund is overweight vs peers. By summing these AuM across all applicable funds, then dividing by the sum of all AuM, we get a normalized metric. We expect this factor to reflect the percentage of AuM that is underweight a stock. 13.1.1 Calculation \\[\\text{AllocationSkew} \\equiv \\sum sgn(-\\omega^+) \\times \\frac{ A}{\\sum A}\\] 13.1.2 Interpretation A positive value tells us that most funds, or at least those with a larger AuM, are underweight, meaning that only a small fraction of managers are bullish towards the stock. Similarly, a negative value indicates that many high-AuM funds are overweight the stock. "],["backtest-implementation.html", "14 Backtest Implementation", " 14 Backtest Implementation 14.0.0.1 Data 14.0.0.2 Compounding Flows 14.0.0.3 Ranking stocks 14.0.0.4 Model 14.0.0.5 Factor Performance 14.0.0.6 Performance Consistency "],["epfr-data-filters-1.html", "EPFR Data &amp; Filters", " EPFR Data &amp; Filters EPFR has an extensive list of over two dozen filters that can be applied to our data sets, therefore the signals we can get can be fine-tuned. For example EPFR data can be filtered by: Asset class focus: ability to select equity mandate, bond mandate, multi-asset mandate, balanced mandate, money market funds, and alternative funds. Fund type: ability to separate by active versus passive, and ETF versus mutual funds. Investor type: ability to separate retail funds (&lt;100,000 USD investment or Mutual Fund) from institutional funds (&gt;100,000 USD investment or ETF). Fund domicile or geographic focus: domicile refers to where the fund is based and where it is registered. Geographic focus refers to the assets that are bought within the fund. Currency of flows: allows you to filter by the currency-type share class the fund denominates in, regardless of the domicile or location of the investment. Theme: allows you to segment funds that invest in specific themes. These can include different commodities, bear/leverage, SRI/ESG, Sharia, Frontier, MLP, Dividend, Insurance, CIT, Crypto, or Hedge Funds. Duration: refers to specific mandated maturities of bond funds. Style: on the equities side, it ranges from the traditional blend, growth, and value mandate style to splitting out market caps. Sector: allows you to filter for sector specific funds (ex: energy, real estate, health care, technology). More definitions can be found in the FAQ section on EPFRs UI "],["video-explanations-1.html", "Video Explanations", " Video Explanations Asset class focus Fund type Investor type Currency of flows Fund domicile or Geographic focus Theme Sector Style Duration Individual managers "],["returns-information.html", "Returns Information", " Returns Information When available, EPFR has provided daily fund return data which can be used as a proxy for the returns of each market that were backtesting. For demonstration purposes, these files are used throughout this notebook to exhibit use cases. However, EPFR is not able to produce bond rates and these files will need to be sourced using third-party return data. Users who choose to utilize these readily-available fund return files to follow along can access them under the FTP folder Returns. Disclaimer: EPFR Quant team uses third-party data providers to calculate returns in our usual presentations to showcase performances. Fund returns are calculated using EPFRs daily flow data, and can be recreated using the following equations: \\[\\text{Fund Return}_{a,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,a,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,a,t}}\\] Where: \\(\\text{Fund Return}\\) = the return value of asset class \\(a\\), across all funds in our universe \\(i\\), for day \\(t\\) \\[\\text{Fund Return}_{c,t} = 100\\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,c,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,c,t}}\\] Where: \\(\\text{Fund Return}\\) = the return value of country \\(c\\), across all funds in our universe \\(i\\), for day \\(t\\) \\[\\text{Fund Return}_{s,r,t} = 100 \\times \\frac{\\sum^{N}_{i=m} \\text{Portfolio Change}_{i,s,r,t}}{\\sum^{N}_{i=m} \\text{Assets Start}_{i,s,r,t}}\\] Where: \\(\\text{Fund Return}\\) = the return value of sector \\(s\\), for region \\(r\\), across all funds in our universe \\(i\\), for day \\(t\\) However, depending on how the signal being tested is indexed, it is important that the return file is also indexed at the same frequency. For example, if the signal being tested is limited to monthly granularity, it is important to ensure that the returns are also indexed by month. In this case, if the user chooses to use one of EPFRs daily return files, the function mat.daily.to.monthly(, T) from library('EPFR.r') should be used to modify a daily return file to be indexed with monthly dates. This same process can also be done using mat.daily.to.weekly from library('EPFR.r') to modify a daily return file to be indexed with weekly dates. "],["country-flows.html", "Country Flows", " Country Flows Country flows is a derived dataset that delivers flows to individual countries. It uses a proprietary algorithm to calculate these derivations. The procedure assumes fixed average country allocations across different cross-border mandates. It then uses fund-level flow data to calculate flows to individual countries. One advantage of this derivation is the broader coverage. EPFRs Fund Flows Database has significant coverage across different regions and countries. In contrast, the Country Allocations Database is a subset of the fund flows dataset. Using fixed average country allocations allows us to include a broader range of cross-border funds in individual country flow calculations. Because of the more general assumptions, the Country Flows Database is typically a better fit for Macroeconomist &amp; and Strategists. A typical use case for a Macroeconomist would be calculating a high-frequency proxy for those countries balance of payments statistics. On the other hand, when trying to create country rotation strategies, quantitative hedge funds rely on fund-level data. This lets them have a one-to-one match between the country allocations and fund-level flows. "],["stock-flows.html", "Stock Flows", " Stock Flows Stock flows is a derived dataset that delivers flows to individual stocks. What EPFR provides is the average percentage allocation of fund managers to individual securities, by Geographic Focus. This output is aggregate data, which we provide monthly at the stock level only. There are 4 different outputs of average allocations that EPFR provides. This includes equal and Fund-weighted average percentage allocations which can include or exclude funds with zero allocation in the calculation. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
